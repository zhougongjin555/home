-- MySQL dump 10.13  Distrib 5.7.34, for Win64 (x86_64)
--
-- Host: localhost    Database: blog_object
-- ------------------------------------------------------
-- Server version	5.7.34

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(150) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group_permissions` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=53 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add log entry',1,'add_logentry'),(2,'Can change log entry',1,'change_logentry'),(3,'Can delete log entry',1,'delete_logentry'),(4,'Can view log entry',1,'view_logentry'),(5,'Can add permission',2,'add_permission'),(6,'Can change permission',2,'change_permission'),(7,'Can delete permission',2,'delete_permission'),(8,'Can view permission',2,'view_permission'),(9,'Can add group',3,'add_group'),(10,'Can change group',3,'change_group'),(11,'Can delete group',3,'delete_group'),(12,'Can view group',3,'view_group'),(13,'Can add content type',4,'add_contenttype'),(14,'Can change content type',4,'change_contenttype'),(15,'Can delete content type',4,'delete_contenttype'),(16,'Can view content type',4,'view_contenttype'),(17,'Can add session',5,'add_session'),(18,'Can change session',5,'change_session'),(19,'Can delete session',5,'delete_session'),(20,'Can view session',5,'view_session'),(21,'Can add user',6,'add_userinfo'),(22,'Can change user',6,'change_userinfo'),(23,'Can delete user',6,'delete_userinfo'),(24,'Can view user',6,'view_userinfo'),(25,'Can add article',7,'add_article'),(26,'Can change article',7,'change_article'),(27,'Can delete article',7,'delete_article'),(28,'Can view article',7,'view_article'),(29,'Can add blog',8,'add_blog'),(30,'Can change blog',8,'change_blog'),(31,'Can delete blog',8,'delete_blog'),(32,'Can view blog',8,'view_blog'),(33,'Can add tag',9,'add_tag'),(34,'Can change tag',9,'change_tag'),(35,'Can delete tag',9,'delete_tag'),(36,'Can view tag',9,'view_tag'),(37,'Can add comment',10,'add_comment'),(38,'Can change comment',10,'change_comment'),(39,'Can delete comment',10,'delete_comment'),(40,'Can view comment',10,'view_comment'),(41,'Can add category',11,'add_category'),(42,'Can change category',11,'change_category'),(43,'Can delete category',11,'delete_category'),(44,'Can view category',11,'view_category'),(45,'Can add article2 tag',12,'add_article2tag'),(46,'Can change article2 tag',12,'change_article2tag'),(47,'Can delete article2 tag',12,'delete_article2tag'),(48,'Can view article2 tag',12,'view_article2tag'),(49,'Can add article up down',13,'add_articleupdown'),(50,'Can change article up down',13,'change_articleupdown'),(51,'Can delete article up down',13,'delete_articleupdown'),(52,'Can view article up down',13,'view_articleupdown');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_article`
--

DROP TABLE IF EXISTS `blog_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_article` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(50) NOT NULL,
  `desc` varchar(255) NOT NULL,
  `create_time` datetime(6) NOT NULL,
  `content` longtext NOT NULL,
  `comment_count` int(11) NOT NULL,
  `up_count` int(11) NOT NULL,
  `down_count` int(11) NOT NULL,
  `category_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  KEY `blog_article_category_id_7e38f15e_fk_blog_category_nid` (`category_id`),
  KEY `blog_article_user_id_5beb0cc1_fk_blog_userinfo_nid` (`user_id`),
  CONSTRAINT `blog_article_category_id_7e38f15e_fk_blog_category_nid` FOREIGN KEY (`category_id`) REFERENCES `blog_category` (`nid`),
  CONSTRAINT `blog_article_user_id_5beb0cc1_fk_blog_userinfo_nid` FOREIGN KEY (`user_id`) REFERENCES `blog_userinfo` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_article`
--

LOCK TABLES `blog_article` WRITE;
/*!40000 ALTER TABLE `blog_article` DISABLE KEYS */;
INSERT INTO `blog_article` VALUES (1,'LeetCode入门指南 之 动态规划思想','推荐学习labuladong大佬的动态规划系列文章：先弄明白什么是动态规划即可，不必一次看完。接着尝试自己做，没有思路了再回过头看相应的文章。 动态规划一般可以由 递归 + 备忘录 一步步转换而来，不必被名字唬住。通常只要找到状态转移方程问题就解决了一大半，至于状态的选择只要题目做多了自然就会形成经 ...','2021-09-01 02:20:53.383648','<div id=\"topics\">\r\n        <div class=\"post\">\r\n            <h1 class=\"postTitle\">\r\n                \r\n<a id=\"cb_post_title_url\" class=\"postTitle2 vertical-middle\" href=\"https://www.cnblogs.com/longbensong/p/15217121.html\">\r\n    <span>javascript 之迭代器</span>\r\n    \r\n\r\n\r\n\r\n</a>\r\n\r\n            </h1>\r\n            <div class=\"clear\"></div>\r\n            <div class=\"postBody\">\r\n                <div id=\"cnblogs_post_body\" class=\"blogpost-body blogpost-body-html\"><a name=\"_labelTop\"></a><div id=\"navCategory\"><p style=\"font-size:16px\"><b>阅读目录</b></p><ul><li><a href=\"#_label0\">简介</a></li><li><a href=\"#_label1\">&nbsp;js 中的迭代器是什么样子的</a></li><li><a href=\"#_label2\">迭代协议</a></li><li><a href=\"#_label3\">自定义迭代</a></li></ul></div>\r\n<div style=\"text-align: right\"><a href=\"#_labelTop\">回到目录</a><a name=\"_label0\"></a></div><h1 id=\"autoid-0-0-0\">简介</h1>\r\n<div class=\"lake-content\">\r\n<p id=\"u21b78091\" class=\"ne-p\"><span class=\"ne-text\">　　迭代器是一种设计模式，可在容器对象 如 链表、数组上遍历，无需关心容器对象的内存分配的实现细节。简单的理解就是可以一个一个的依次拿到其中的数据，类似一个移动的指针，但是会告诉我们什么时候结束。这样我们可以拿到数据之后可以做一些我们需要做的事情。</span></p>\r\n</div>\r\n<div style=\"text-align: right\"><a href=\"#_labelTop\">回到目录</a><a name=\"_label1\"></a></div><h1 id=\"autoid-1-0-0\">&nbsp;js 中的迭代器是什么样子的</h1>\r\n<div class=\"lake-content\">\r\n<p id=\"u8d33aeca\" class=\"ne-p\"><span class=\"ne-text\">　　在javascript 中迭代器是一个<strong>特殊对象</strong>，这个<span class=\"ne-text\">迭代器对象有一个<strong>next()</strong>方法，每次调用都返回一个对象（结果对象）。结果对象有<strong>两个属性</strong>：一个是value，表示下一个将要返回的值；另一个是done，它是一个布尔类型的值，<span class=\"ne-text\">如果已经迭代到序列中的最后一个值，则它为 <span class=\"ne-text\">true<span class=\"ne-text\">。迭代器还会保存一个内部指针，用来指向当前集合中值的位置，每调用一次next()方法，都会返回下一个可用的值，类似下面这个对象的结构。</span></span></span></span></span></p>\r\n<div class=\"cnblogs_code\"><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img src=\"//common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color: rgba(0, 0, 0, 1)\">{\r\n  next: </span><span style=\"color: rgba(0, 0, 255, 1)\">function</span><span style=\"color: rgba(0, 0, 0, 1)\"> () {\r\n        </span><span style=\"color: rgba(0, 0, 255, 1)\">return</span><span style=\"color: rgba(0, 0, 0, 1)\"> {\r\n            value:</span>\'\'<span style=\"color: rgba(0, 0, 0, 1)\">,\r\n            done: </span><span style=\"color: rgba(0, 0, 255, 1)\">true</span> / <span style=\"color: rgba(0, 0, 255, 1)\">false</span><span style=\"color: rgba(0, 0, 0, 1)\">\r\n        }  \r\n    }\r\n}        </span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img src=\"//common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div></div>\r\n</div>\r\n<div style=\"text-align: right\"><a href=\"#_labelTop\">回到目录</a><a name=\"_label2\"></a></div><h1 id=\"autoid-2-0-0\">迭代协议</h1>\r\n<p>　　随着javascript 语言的能力进一步提升，新增了一些新的数据类型 如 Map、Set、WeakMap 等，为了这些不同的数据结构，可以统一的迭代，es6 增加了迭代协议这个东西。</p>\r\n<p>迭代协议并不<span class=\"ne-text\">是新的内置实现或语法，而是<strong><span class=\"ne-text\">协议</span></strong><span class=\"ne-text\">。这些协议可以被任何遵循某些约定的对象来实现。</span></span></p>\r\n<div class=\"lake-content\">\r\n<p id=\"ue92f4649\" class=\"ne-p\"><span class=\"ne-text\">迭代协议具体分为两个协议：<strong><span class=\"ne-text\">可迭代协议和迭代器协议。</span></strong></span></p>\r\n<p class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgba(255, 0, 0, 1)\"><strong><span class=\"ne-text\">简单的理解就是在js 中任何对象只要满足迭代协议就可以遍历</span></strong></span></p>\r\n</div>\r\n<h2 id=\"autoid-3-0-0\">可迭代协议</h2>\r\n<div class=\"lake-content\">\r\n<p id=\"ufc7f1fbb\" class=\"ne-p\"><span class=\"ne-text\">要成为<strong><span class=\"ne-text\">可迭代</span></strong><span class=\"ne-text\">对象， 一个对象必须实现 <span style=\"color: rgba(255, 0, 0, 1)\"><strong><span class=\"ne-text\">@@iterator</span></strong></span><span class=\"ne-text\"> 方法。这意味着对象（或者它原型链<span class=\"ne-text\">上的某个对象）必须有一个键为 <span class=\"ne-text\">@@iterator<span class=\"ne-text\"> 的属性，可通过常量 <a class=\"ne-link\" href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator\" target=\"_blank\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator\"><span class=\"ne-text\">Symbol.iterator</span></a><span class=\"ne-text\"> 访问该属性：</span></span></span></span></span></span></span></p>\r\n<p id=\"u12c02120\" class=\"ne-p\"><span class=\"ne-text\">简单的理解，你想让一个东西可以遍历，那么这个东西要有一个 <span class=\"ne-text\">@@iterator<span class=\"ne-text\"> ，这个属性可以通过<strong><span class=\"ne-text\">Symbol.iterator</span></strong><span class=\"ne-text\"> 访问</span></span></span></span></p>\r\n</div>\r\n<div class=\"lake-content\">\r\n<div class=\"table-wrapper\"><table class=\"ne-table\" style=\"height: 118px; width: 941px\">\r\n<tbody>\r\n<tr>\r\n<td width=\"375\">\r\n<p id=\"u5851bbf9\" class=\"ne-p\"><span class=\"ne-text\">属性</span></p>\r\n</td>\r\n<td width=\"375\">\r\n<p id=\"ude87ed46\" class=\"ne-p\"><span class=\"ne-text\">值</span></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td width=\"375\">\r\n<p id=\"u97aa7fe2\" class=\"ne-p\"><span class=\"ne-text\">[Symbol.iterator]</span></p>\r\n</td>\r\n<td width=\"375\">\r\n<p id=\"u5723ae70\" class=\"ne-p\"><span class=\"ne-text\">一个无参数的函数，其返回值为一个符合迭代器协议<span class=\"ne-text\">的对象。</span></span></p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table></div>\r\n<h2 id=\"autoid-3-1-0\">迭代器协议</h2>\r\n<div class=\"lake-content\">\r\n<p id=\"u68fd0d55\" class=\"ne-p\"><strong><span class=\"ne-text\">迭代器协议</span></strong><span class=\"ne-text\">定义了产生一系列值（无论是有限个还是无限个）的标准方式。当值为有限个时，所有的值都被迭代完毕后，则会返回一个默认返回值。</span></p>\r\n<p id=\"ub2627121\" class=\"ne-p\"><span class=\"ne-text\">只有实现了一个拥有以下语义（semantic）的 <strong><span class=\"ne-text\">next()</span></strong><span class=\"ne-text\"> 方法，一个对象才符合迭代器协议：</span></span></p>\r\n<div class=\"lake-content\">\r\n<div class=\"table-wrapper\"><table id=\"lnbXf\" class=\"ne-table\" style=\"height: 216px; width: 956px\">\r\n<tbody>\r\n<tr>\r\n<td width=\"375\">\r\n<p id=\"u4d47c4b9\" class=\"ne-p\"><span class=\"ne-text\">属性</span></p>\r\n</td>\r\n<td width=\"375\">\r\n<p id=\"u8784f203\" class=\"ne-p\"><span class=\"ne-text\">值</span></p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td width=\"375\">\r\n<p id=\"uf1a30555\" class=\"ne-p\"><span class=\"ne-text\">next</span></p>\r\n</td>\r\n<td width=\"375\">\r\n<p id=\"u732734c9\" class=\"ne-p\"><span class=\"ne-text\">一个无参数函数，返回一个应当拥有以下两个属性的对象：</span></p>\r\n<p id=\"udc9c1eff\" class=\"ne-p\"><strong><span class=\"ne-text\">done</span></strong><strong><span class=\"ne-text\">（boolean）</span></strong></p>\r\n<p id=\"u13aaf0d0\" class=\"ne-p\"><span class=\"ne-text\"><span style=\"color: rgba(255, 0, 0, 1)\">next()</span><span class=\"ne-text\"><span style=\"color: rgba(255, 0, 0, 1)\"> 方法必须返回一个对象，该对象应当有两个属性：</span><span class=\"ne-text\"> <span class=\"ne-text\"><span style=\"color: rgba(255, 0, 0, 1)\">done</span><span class=\"ne-text\"> <span class=\"ne-text\"><span style=\"color: rgba(255, 0, 0, 1)\">和</span><span class=\"ne-text\"> <span class=\"ne-text\"><span style=\"color: rgba(255, 0, 0, 1)\">value</span><span class=\"ne-text\"><span style=\"color: rgba(255, 0, 0, 1)\">，</span>如果返回了一个非对象值（比如<span class=\"ne-text\"> <span class=\"ne-text\">false<span class=\"ne-text\"> <span class=\"ne-text\">或<span class=\"ne-text\"> <span class=\"ne-text\">undefined<span class=\"ne-text\">），则会抛出一个<span class=\"ne-text\"><span class=\"ne-text\">&nbsp;</span><span class=\"ne-text\"><span class=\"ne-text\">异常（<span class=\"ne-text\">\"iterator.next() returned a non-object value\"<span class=\"ne-text\">）。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table></div>\r\n</div>\r\n<h2 class=\"ne-p\" id=\"autoid-3-2-0\"><span class=\"ne-text\">迭代过程</span></h2>\r\n<div class=\"lake-content\">\r\n<p id=\"ufabb94a0\" class=\"ne-p\"><span class=\"ne-text\">当一个对象需要被迭代的时候（比如被写入一个 for...of<span class=\"ne-text\">&nbsp;循环时），首先，会不带参数调用它的 <span class=\"ne-text\">@@iterator<span class=\"ne-text\"> 方法( <span style=\"color: rgba(255, 0, 0, 1)\">此时返回的是结构是这样的</span><span class=\"ne-text\"><span style=\"color: rgba(255, 0, 0, 1)\"> { next: function () {}}</span>)<span class=\"ne-text\">，然后使用此方法返回的<strong><span class=\"ne-text\">迭代器</span></strong><span class=\"ne-text\">获得要迭代的值（其实就是不断的调用这个next()方法）</span></span></span></span></span></span></span></p>\r\n<h2 class=\"ne-p\" id=\"autoid-3-3-0\"><span class=\"ne-text\"><span class=\"ne-text\"><span class=\"ne-text\"><span class=\"ne-text\"><span class=\"ne-text\"><span class=\"ne-text\"><span class=\"ne-text\">迭代总结</span></span></span></span></span></span></span></h2>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"lake-content\">\r\n<p id=\"u0cff1f30\" class=\"ne-p\"><span class=\"ne-text\">迭代协议可以总结为，一个东西要遍历，必须满足可迭代协议跟迭代器协议</span></p>\r\n<ul class=\"ne-ul\">\r\n<li id=\"u5ed68b82\"><span class=\"ne-text\">可迭代协议：这个对象必须有@@iterator，可以通过<strong><span class=\"ne-text\">Symbol.iterator</span></strong><span class=\"ne-text\"> 访问</span></span></li>\r\n</ul>\r\n<ul class=\"ne-ul\">\r\n<li id=\"u3acb1386\"><span class=\"ne-text\">迭代器协议：是一个对象，这个对象的next() 函数返回一个对象，这个对象包括两个属性，一个是value，一个是done(boolean，是否是最后一个元素，done 为 true 时 value 可省略)</span></li>\r\n</ul>\r\n<p id=\"u32cb8b4b\" class=\"ne-p\"><span class=\"ne-text\">也就是说 <span class=\"ne-text\">迭代器对象本质上<span class=\"ne-text\">，<span class=\"ne-text\">就是一个指针对象。通过指针对象的<span class=\"ne-text\">next()<span class=\"ne-text\">，用来移动指针。</span></span></span></span></span></span></p>\r\n<p class=\"ne-p\">&nbsp;</p>\r\n<div style=\"text-align: right\"><a href=\"#_labelTop\">回到目录</a><a name=\"_label3\"></a></div><h1 class=\"ne-p\" id=\"autoid-3-4-0\">自定义迭代</h1>\r\n<p>对象是没有实现迭代器，所以不能遍历对象，为了可以实现对象的遍历，我们需要在对象上实现上面说的迭代器，通常有两种写法，一种是传统的写法，这种需要自己去控制内部的状态，另外一种是利用生成器函数返回的<span style=\"color: rgba(255, 0, 0, 1)\">Generator</span>的迭代器来实现，代码如下：</p>\r\n<h2 class=\"ne-p\" id=\"autoid-4-0-0\">传统写法</h2>\r\n<div class=\"cnblogs_code\"><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img src=\"//common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre>let obj =<span style=\"color: rgba(0, 0, 0, 1)\"> {\r\n  name: </span>\'joel\'<span style=\"color: rgba(0, 0, 0, 1)\">,\r\n  adress: </span>\'gz\'<span style=\"color: rgba(0, 0, 0, 1)\">,\r\n  [Symbol.iterator]: () </span>=&gt;<span style=\"color: rgba(0, 0, 0, 1)\"> {\r\n     </span><span style=\"color: rgba(0, 128, 0, 1)\">//</span><span style=\"color: rgba(0, 128, 0, 1)\"> 这里不要用this， 因为是return fn, this 会丢失</span>\r\n    let index = -1, atrrList =<span style=\"color: rgba(0, 0, 0, 1)\"> Object.keys(obj);\r\n    const objIterator </span>=<span style=\"color: rgba(0, 0, 0, 1)\"> {\r\n      next: () </span>=&gt;<span style=\"color: rgba(0, 0, 0, 1)\"> {\r\n        let result </span>= \'\'<span style=\"color: rgba(0, 0, 0, 1)\">\r\n        index</span>++\r\n        <span style=\"color: rgba(0, 0, 255, 1)\">if</span> (index &lt;<span style=\"color: rgba(0, 0, 0, 1)\"> atrrList.length) {\r\n          result </span>=<span style=\"color: rgba(0, 0, 0, 1)\"> {\r\n            value: atrrList[index],\r\n            done: </span><span style=\"color: rgba(0, 0, 255, 1)\">false</span><span style=\"color: rgba(0, 0, 0, 1)\">\r\n          }\r\n        } </span><span style=\"color: rgba(0, 0, 255, 1)\">else</span><span style=\"color: rgba(0, 0, 0, 1)\"> {\r\n          result </span>=<span style=\"color: rgba(0, 0, 0, 1)\"> {\r\n            done: </span><span style=\"color: rgba(0, 0, 255, 1)\">true</span><span style=\"color: rgba(0, 0, 0, 1)\">\r\n          }\r\n        }\r\n        </span><span style=\"color: rgba(0, 0, 255, 1)\">return</span><span style=\"color: rgba(0, 0, 0, 1)\"> result\r\n      }\r\n    }\r\n    </span><span style=\"color: rgba(0, 0, 255, 1)\">return</span><span style=\"color: rgba(0, 0, 0, 1)\"> objIterator\r\n  }\r\n}\r\n\r\n</span><span style=\"color: rgba(0, 0, 255, 1)\">for</span><span style=\"color: rgba(0, 0, 0, 1)\"> (const item of obj) {\r\n    console.log(</span>\'atrrs:\' +　item + \',value:\' +<span style=\"color: rgba(0, 0, 0, 1)\"> obj[item])\r\n}</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img src=\"//common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div></div>\r\n<h2 class=\"ne-p\" id=\"autoid-4-1-0\">生成器函数写法</h2>\r\n<div class=\"cnblogs_code\"><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img src=\"//common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color: rgba(0, 128, 0, 1)\">//</span><span style=\"color: rgba(0, 128, 0, 1)\"> 为不可迭代的对象添加迭代器</span>\r\nlet obj =<span style=\"color: rgba(0, 0, 0, 1)\"> {\r\n  a: </span>1<span style=\"color: rgba(0, 0, 0, 1)\">,\r\n  b: </span>2<span style=\"color: rgba(0, 0, 0, 1)\">\r\n}\r\nobj[Symbol.iterator] </span>= <span style=\"color: rgba(0, 0, 255, 1)\">function</span>*<span style=\"color: rgba(0, 0, 0, 1)\"> () {\r\n  let keys </span>=<span style=\"color: rgba(0, 0, 0, 1)\"> Object.keys(obj);\r\n  </span><span style=\"color: rgba(0, 128, 0, 1)\">//</span><span style=\"color: rgba(0, 128, 0, 1)\">取到key值的长度</span>\r\n  let len =<span style=\"color: rgba(0, 0, 0, 1)\"> keys.length;\r\n  </span><span style=\"color: rgba(0, 128, 0, 1)\">//</span><span style=\"color: rgba(0, 128, 0, 1)\">定义循环变量</span>\r\n  let n = 0<span style=\"color: rgba(0, 0, 0, 1)\">;\r\n  </span><span style=\"color: rgba(0, 128, 0, 1)\">//</span><span style=\"color: rgba(0, 128, 0, 1)\">条件判断</span>\r\n  <span style=\"color: rgba(0, 0, 255, 1)\">while</span> (n &lt;= len - 1<span style=\"color: rgba(0, 0, 0, 1)\">) {\r\n      yield { k: keys[n], v: obj[keys[n]] };\r\n      n</span>++<span style=\"color: rgba(0, 0, 0, 1)\">\r\n  }\r\n}\r\n</span><span style=\"color: rgba(0, 128, 0, 1)\">//</span><span style=\"color: rgba(0, 128, 0, 1)\">返回的是个对象的key和value</span>\r\n<span style=\"color: rgba(0, 0, 255, 1)\">for</span><span style=\"color: rgba(0, 0, 0, 1)\"> (let { k, v } of obj) {\r\n  console.log(k, v);\r\n}</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img src=\"//common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div></div>\r\n</div>\r\n<p>其他相关如内置可迭代对象、用于可迭代对象的语法、接受可迭代对象的内置api 等 请点击 <a title=\"这里\" href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Iterators_and_Generators#%E7%94%9F%E6%88%90%E5%99%A8%E5%87%BD%E6%95%B0\" target=\"_blank\">这里</a></p>\r\n<br><hr><pre>如果您觉得阅读本文对您有帮助，请点一下“<b>推荐</b>”按钮，您的<b>“推荐”</b>将是我最大的写作动力！欢迎各位转载，但是未经作者本人同意，转载文章之后<b>必须在文章页面明显位置给出作者和原文连接</b>，否则保留追究法律责任的权利。</pre></div>\r\n<div class=\"clear\"></div>\r\n<div id=\"blog_post_info_block\"><div id=\"BlogPostCategory\">\r\n    分类: \r\n            <a href=\"https://www.cnblogs.com/longbensong/category/1264854.html\" target=\"_blank\">es6</a>,             <a href=\"https://www.cnblogs.com/longbensong/category/1101835.html\" target=\"_blank\">javaScript es5基础</a></div>\r\n<div id=\"EntryTag\">\r\n    标签: \r\n            <a href=\"https://www.cnblogs.com/longbensong/tag/js%20%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1/\">js 遍历对象</a>,             <a href=\"https://www.cnblogs.com/longbensong/tag/%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%AD%E4%BB%A3%E5%99%A8/\">自定义迭代器</a>,             <a href=\"https://www.cnblogs.com/longbensong/tag/js%20%E8%BF%AD%E4%BB%A3%E5%99%A8/\">js 迭代器</a></div>\r\n\r\n    <div id=\"blog_post_info\">\r\n<div id=\"green_channel\">\r\n        <a href=\"javascript:void(0);\" id=\"green_channel_digg\" onclick=\"DiggIt(15217121,cb_blogId,1);green_channel_success(this,\'谢谢推荐！\');\">好文要顶</a>\r\n        <a id=\"green_channel_follow\" onclick=\"follow(\'53875310-0277-e511-9fc1-ac853d9f53cc\');\" href=\"javascript:void(0);\">关注我</a>\r\n    <a id=\"green_channel_favorite\" onclick=\"AddToWz(cb_entryId);return false;\" href=\"javascript:void(0);\">收藏该文</a>\r\n    <a id=\"green_channel_weibo\" href=\"javascript:void(0);\" title=\"分享至新浪微博\" onclick=\"ShareToTsina()\"><img src=\"https://common.cnblogs.com/images/icon_weibo_24.png\" alt=\"\"></a>\r\n    <a id=\"green_channel_wechat\" href=\"javascript:void(0);\" title=\"分享至微信\" onclick=\"shareOnWechat()\"><img src=\"https://common.cnblogs.com/images/wechat.png\" alt=\"\"></a>\r\n</div>\r\n<div id=\"author_profile\">\r\n    <div id=\"author_profile_info\" class=\"author_profile_info\">\r\n            <a href=\"https://home.cnblogs.com/u/longbensong/\" target=\"_blank\"><img src=\"https://pic.cnblogs.com/face/825196/20190623153358.png\" class=\"author_avatar\" alt=\"\"></a>\r\n        <div id=\"author_profile_detail\" class=\"author_profile_info\">\r\n            <a href=\"https://home.cnblogs.com/u/longbensong/\">风吹De麦浪</a><br>\r\n            <a href=\"https://home.cnblogs.com/u/longbensong/followees/\">关注 - 35</a><br>\r\n            <a href=\"https://home.cnblogs.com/u/longbensong/followers/\">粉丝 - 44</a>\r\n        </div>\r\n    </div>\r\n    <div class=\"clear\"></div>\r\n    <div id=\"author_profile_honor\"></div>\r\n    <div id=\"author_profile_follow\">\r\n                <a href=\"javascript:void(0);\" onclick=\"follow(\'53875310-0277-e511-9fc1-ac853d9f53cc\');return false;\">+加关注</a>\r\n    </div>\r\n</div>\r\n<div id=\"div_digg\">\r\n    <div class=\"diggit\" onclick=\"votePost(15217121,\'Digg\')\">\r\n        <span class=\"diggnum\" id=\"digg_count\">0</span>\r\n    </div>\r\n    <div class=\"buryit\" onclick=\"votePost(15217121,\'Bury\')\">\r\n        <span class=\"burynum\" id=\"bury_count\">0</span>\r\n    </div>\r\n    <div class=\"clear\"></div>\r\n    <div class=\"diggword\" id=\"digg_tips\">\r\n    </div>\r\n</div>\r\n\r\n<script type=\"text/javascript\">\r\n    currentDiggType = 0;\r\n</script></div>\r\n    <div class=\"clear\"></div>\r\n    <div id=\"post_next_prev\">\r\n\r\n    <a href=\"https://www.cnblogs.com/longbensong/p/14752101.html\" class=\"p_n_p_prefix\">« </a> 上一篇：    <a href=\"https://www.cnblogs.com/longbensong/p/14752101.html\" title=\"发布于 2021-05-10 17:54\">前端数据结构--二叉树先序、中序、后序 递归、非递归遍历</a>\r\n\r\n</div>\r\n</div>\r\n            </div>\r\n            <div class=\"postDesc\">posted @ \r\n<span id=\"post-date\">2021-09-02 07:18</span>&nbsp;\r\n<a href=\"https://www.cnblogs.com/longbensong/\">风吹De麦浪</a>&nbsp;\r\n阅读(<span id=\"post_view_count\">122</span>)&nbsp;\r\n评论(<span id=\"post_comment_count\">0</span>)&nbsp;\r\n<a href=\"https://i.cnblogs.com/EditPosts.aspx?postid=15217121\" rel=\"nofollow\">编辑</a>&nbsp;\r\n<a href=\"javascript:void(0)\" onclick=\"AddToWz(15217121);return false;\">收藏</a>&nbsp;\r\n<a href=\"javascript:void(0)\" onclick=\"reportManager.report({ currentUserId: \'\', targetType: \'blogPost\', targetId: \'15217121\', targetLink: \'https://www.cnblogs.com/longbensong/p/15217121.html\', title: \'javascript 之迭代器\' })\">举报</a></div>\r\n        </div>\r\n	    \r\n	    \r\n    </div>',2,2,0,1,1),(2,'解锁 VS Code 更多可能性，轻松入门 WebView','作者：HelloGitHub-小夏 说起 VS Code 大家普遍印象应该都差不多是这样：不就是个编辑器嘛，最主要的还是 coding 的快感咯。 里面很多功能都应该是围绕如何提高 coding 效率、减少 coding 出错率、解放 coder 小哥哥小姐姐的劳动力等等，至于代码以外的东西比如预览 ...','2021-07-01 02:22:55.045000','<div id=\"topics\">\r\n        <div class=\"post\">\r\n            <h1 class=\"postTitle\">\r\n                \r\n<a id=\"cb_post_title_url\" class=\"postTitle2 vertical-middle\" href=\"https://www.cnblogs.com/wtzbk/p/15216488.html\">\r\n    <span>Kubernetes环境搭建</span>\r\n    \r\n\r\n\r\n\r\n</a>\r\n\r\n            </h1>\r\n            <div class=\"clear\"></div>\r\n            <div class=\"postBody\">\r\n                <div id=\"cnblogs_post_body\" class=\"blogpost-body cnblogs-markdown\">\r\n<section id=\"nice\" data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" style=\"font-size: 16px; color: rgba(0, 0, 0, 1); padding: 0 10px; line-height: 1.6; word-spacing: 0; letter-spacing: 0; word-wrap: break-word; text-align: left; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif\"><h3 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; border-bottom: 2px solid rgba(0, 172, 193, 1); padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 20px\"><span class=\"prefix\" style=\"font-weight: normal; background: rgba(0, 172, 193, 1); color: rgba(255, 255, 255, 1); padding: 3px 10px 0; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px; display: none\"></span><span class=\"content\" style=\"display: inline-block; font-weight: normal; background: rgba(0, 172, 193, 1); color: rgba(255, 255, 255, 1); padding: 3px 10px 0; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px\">前言</span><span class=\"suffix\" style=\"font-weight: normal; background: rgba(0, 172, 193, 1); color: rgba(255, 255, 255, 1); padding: 3px 10px 0; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px; display: none\"></span></h3>\r\n<p data-tool=\"mdnice编辑器\" style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">本篇是Kubernetes第二篇，大家一定要把环境搭建起来，看是解决不了问题的，必须实战。</p>\r\n<h5 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 16px\"><span class=\"prefix\" style=\"display: none\"></span><span class=\"content\">Kubernetes系列文章:</span><span class=\"suffix\" style=\"display: none\"></span></h5>\r\n<ol data-tool=\"mdnice编辑器\" style=\"margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: rgba(0, 0, 0, 1); list-style-type: decimal\">\r\n<li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><a href=\"https://mp.weixin.qq.com/s?__biz=MzU0NDc4NjA0MQ==&amp;mid=2247485091&amp;idx=1&amp;sn=c59ee8f280e73cc542f6ae1401ad035a&amp;chksm=fb7795b5cc001ca3a4f19f09b7607a2dc8b99f67d0a2d8620b0f7aecefcbcb44f2dbc595dd23&amp;token=289006435&amp;lang=zh_CN#rd\" style=\"text-decoration: none; color: rgba(30, 107, 184, 1); word-wrap: break-word; font-weight: bold; border-bottom: 1px solid rgba(30, 107, 184, 1)\">Kubernetes介绍</a></section></li></ol>\r\n<h3 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; border-bottom: 2px solid rgba(0, 172, 193, 1); padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 20px\"><span class=\"prefix\" style=\"font-weight: normal; background: rgba(0, 172, 193, 1); color: rgba(255, 255, 255, 1); padding: 3px 10px 0; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px; display: none\"></span><span class=\"content\" style=\"display: inline-block; font-weight: normal; background: rgba(0, 172, 193, 1); color: rgba(255, 255, 255, 1); padding: 3px 10px 0; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px\">Kubernetes搭建方式介绍和对比</span><span class=\"suffix\" style=\"font-weight: normal; background: rgba(0, 172, 193, 1); color: rgba(255, 255, 255, 1); padding: 3px 10px 0; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px; display: none\"></span></h3>\r\n<h5 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 16px\"><span class=\"prefix\" style=\"display: none\"></span><span class=\"content\">Minikube</span><span class=\"suffix\" style=\"display: none\"></span></h5>\r\n<p data-tool=\"mdnice编辑器\" style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">Minikube是一种可以在本地轻松运行Kubernetes的工具。Minikube在笔记本电脑的VM中运行单节点Kubernetes集群，供希望尝试Kubernetes或日常开发的用户测试使用。特点是不能启动生产集群,没有高可用性的单节点机器。</p>\r\n<h5 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 16px\"><span class=\"prefix\" style=\"display: none\"></span><span class=\"content\">Kubeadm</span><span class=\"suffix\" style=\"display: none\"></span></h5>\r\n<p data-tool=\"mdnice编辑器\" style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">Kubeadm是Kubernetes 1.4开始新增的特性，Kubeadm 是一个提供了 kubeadm init 和 kubeadm join 的工具， 作为创建 Kubernetes 集群的 “快捷途径” 的最佳实践。Kubeadm 通过执行必要的操作来启动和运行最小可用集群。 按照设计，它只关注启动引导，而非配置机器。同样的， 安装各种 “锦上添花” 的扩展，例如 Kubernetes Dashboard、 监控方案、以及特定云平台的扩展，都不在讨论范围内。Kubeadm是一种把 kubelet 直接运行在宿主机上，然后使用容器部署其他的 Kubernetes 组件的方案。</p>\r\n<h5 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 16px\"><span class=\"prefix\" style=\"display: none\"></span><span class=\"content\">Kind</span><span class=\"suffix\" style=\"display: none\"></span></h5>\r\n<p data-tool=\"mdnice编辑器\" style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">Kind 是 Kubernetes in Docker 的简写，是一个使用 Docker 容器作为 Nodes，在本地创建和运行 Kubernetes 群集的工具。适用于在本机创建 Kubernetes 群集环境进行开发和测试。Kind 使用kubeadm创建和启动群集节点，使用 containerd 作为容器运行时。</p>\r\n<h5 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 16px\"><span class=\"prefix\" style=\"display: none\"></span><span class=\"content\">二进制包</span><span class=\"suffix\" style=\"display: none\"></span></h5>\r\n<p data-tool=\"mdnice编辑器\" style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">二进制包就是在官网下载相关的组件的二进制包，相对于上面两种快速搭建集群的方式，其实就是相当于用程序脚本帮我们装好了集群，前两者属于自动部署，简化部署操作，自动部署屏蔽了很多细节，使得对各个模块感知很少，遇到问题很难排查，如果手动安装，对Kubernetes理解也会更全面。二进制包目前生产环境的主流搭建方式，已在生产环境验证，kubeadm也可以搭建生产环境。</p>\r\n<h3 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; border-bottom: 2px solid rgba(0, 172, 193, 1); padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 20px\"><span class=\"prefix\" style=\"font-weight: normal; background: rgba(0, 172, 193, 1); color: rgba(255, 255, 255, 1); padding: 3px 10px 0; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px; display: none\"></span><span class=\"content\" style=\"display: inline-block; font-weight: normal; background: rgba(0, 172, 193, 1); color: rgba(255, 255, 255, 1); padding: 3px 10px 0; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px\">使用Kubeadm搭建Kubernetes学习环境</span><span class=\"suffix\" style=\"font-weight: normal; background: rgba(0, 172, 193, 1); color: rgba(255, 255, 255, 1); padding: 3px 10px 0; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px; display: none\"></span></h3>\r\n<p data-tool=\"mdnice编辑器\" style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">这里我简单说下我为啥选择Kubeadm作为自己搭建集群工具，Kind、Minikube实在是太简单，根本让我们感觉不到一点困难，Kubeadm可以让我们适当体验Kubernetes搭建过程，去理解一些组件之间的交互，二进制才是我们终极目标，我只是刚开始不想让大家被安装就抹灭了学习Kubernetes的兴趣。</p>\r\n<h5 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 16px\"><span class=\"prefix\" style=\"display: none\"></span><span class=\"content\">配置说明</span><span class=\"suffix\" style=\"display: none\"></span></h5>\r\n<p data-tool=\"mdnice编辑器\" style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">在搭建K8S集群时，推荐在阿里云或腾讯云采购如下配置(当然也可以使用自己虚机):</p>\r\n<ol data-tool=\"mdnice编辑器\" style=\"margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: rgba(0, 0, 0, 1); list-style-type: decimal\">\r\n<li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\">至少2台2C2G的服务器，最好2C4G或者8G，2G的话内存单存Kubernetes就会占用一般，后面不太方便大家做实验，我采用的2台2C4G阿里云机器;</section></li><li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\">系统的话大家采用CentOS 7.X 或 CentOS 8.X的版本，这里我采用8.2的版本；</section></li></ol>\r\n<h5 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 16px\"><span class=\"prefix\" style=\"display: none\"></span><span class=\"content\">搭建前准备工作</span><span class=\"suffix\" style=\"display: none\"></span></h5>\r\n<p data-tool=\"mdnice编辑器\" style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">注意:我这里采用的Kubernetes1.21.2和Docker 20.10.7的版本，大家注意下版本问题。</p>\r\n<h5 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 16px\"><span class=\"prefix\" style=\"display: none\"></span><span class=\"content\">查看Linux版本</span><span class=\"suffix\" style=\"display: none\"></span></h5>\r\n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs apache\" style=\"word-wrap: break-word; margin: 0 2px; overflow-x: auto; padding: 15px 16px 16px; color: rgba(56, 58, 66, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; background: rgba(250, 250, 250, 1); border-radius: 5px\"><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\"><span class=\"hljs-comment\">#所有机器都进行检查</span></span><br><span class=\"hljs-comment\">cat&nbsp;/etc/redhat-release</span><br></code></pre>\r\n<h5 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 16px\"><span class=\"prefix\" style=\"display: none\"></span><span class=\"content\">修改hostname</span><span class=\"suffix\" style=\"display: none\"></span></h5>\r\n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs cpp\" style=\"word-wrap: break-word; margin: 0 2px; overflow-x: auto; padding: 15px 16px 16px; color: rgba(56, 58, 66, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; background: rgba(250, 250, 250, 1); border-radius: 5px\"><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#这里强烈建议修改hostname，这样子在集群列表查询的时候很很明确</span><br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#修改hostname</span><br>hostnamectl&nbsp;<span class=\"hljs-built_in\" style=\"color: rgba(193, 132, 1, 1); line-height: 26px\"><span class=\"hljs-built_in\">set</span></span>-hostname&nbsp;demo-master<span class=\"hljs-number\">-1</span><br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#检查是否修改成功</span><br>hostname<br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#设置hostname解析&nbsp;类似windows的host解析</span><br><span class=\"hljs-built_in\" style=\"color: rgba(193, 132, 1, 1); line-height: 26px\">echo</span>&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"127.0.0.1&nbsp;&nbsp;&nbsp;</span><span class=\"hljs-variable\" style=\"color: rgba(152, 104, 1, 1); line-height: 26px\"><span class=\"hljs-string\">$(hostname)</span></span><span class=\"hljs-string\">\"</span></span>&nbsp;&gt;&gt;&nbsp;/etc/hosts<br></code></pre>\r\n<h5 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 16px\"><span class=\"prefix\" style=\"display: none\"></span><span class=\"content\">查看网络</span><span class=\"suffix\" style=\"display: none\"></span></h5>\r\n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs x86asm\" style=\"word-wrap: break-word; margin: 0 2px; overflow-x: auto; padding: 15px 16px 16px; color: rgba(56, 58, 66, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; background: rgba(250, 250, 250, 1); border-radius: 5px\"><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#查看内网<span class=\"hljs-built_in\">ip</span>地址&nbsp;找到eth0</span><br>ip&nbsp;<span class=\"hljs-keyword\">add</span><br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#使用ping命令保证每个节点都是<span class=\"hljs-built_in\">IP</span>地址必须可以互通</span><br>ping<br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#关闭防火墙</span><br>systemctl&nbsp;stop&nbsp;firewalld<br>systemctl&nbsp;<span class=\"hljs-built_in\" style=\"color: rgba(193, 132, 1, 1); line-height: 26px\">disable</span>&nbsp;firewalld<br></code></pre>\r\n<figure data-tool=\"mdnice编辑器\" style=\"margin: 10px 0; display: flex; flex-direction: column; justify-content: center; align-items: center\"><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/374ad558221e44c598e993092c698c37~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"image.png\" style=\"display: block; margin: 0 auto; max-width: 100%\" class=\"medium-zoom-image\"><figcaption style=\"margin-top: 5px; text-align: center; color: rgba(136, 136, 136, 1); font-size: 14px\">image.png</figcaption></figure>\r\n<h5 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 16px\"><span class=\"prefix\" style=\"display: none\"></span><span class=\"content\">Docker安装</span><span class=\"suffix\" style=\"display: none\"></span></h5>\r\n<p data-tool=\"mdnice编辑器\" style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">可以参考我的这篇<a href=\"https://mp.weixin.qq.com/s?__biz=MzU0NDc4NjA0MQ==&amp;mid=2247484357&amp;idx=1&amp;sn=564f69e0c3d5d27583d9da04571530a0&amp;chksm=fb7790d3cc0019c54826bd1a02888cee305a436481ac6d7efd797351d252a7642334853bf2c6&amp;token=43158544&amp;lang=zh_CN#rd\" style=\"text-decoration: none; color: rgba(30, 107, 184, 1); word-wrap: break-word; font-weight: bold; border-bottom: 1px solid rgba(30, 107, 184, 1)\">博文</a>;</p>\r\n<h5 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 16px\"><span class=\"prefix\" style=\"display: none\"></span><span class=\"content\">安装 kubeadm、kubelet 和 kubectl</span><span class=\"suffix\" style=\"display: none\"></span></h5>\r\n<ol data-tool=\"mdnice编辑器\" style=\"margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: rgba(0, 0, 0, 1); list-style-type: decimal\">\r\n<li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">配置配置Kubernetes的yum源;</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs ruby\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\">cat&nbsp;&lt;&lt;EOF&nbsp;&gt;&nbsp;<span class=\"hljs-regexp\">/etc/yum</span>.repos.d/kubernetes.repo<br>[kubernetes]<br>name=Kubernetes<br>baseurl=<span class=\"hljs-symbol\">http:</span>/<span class=\"hljs-regexp\">/mirrors.aliyun.com/kubernetes</span><span class=\"hljs-regexp\">/yum/repos</span><span class=\"hljs-regexp\">/kubernetes-el7-x86_64</span><br><span class=\"hljs-regexp\">enabled=1</span><br><span class=\"hljs-regexp\">gpgcheck=0</span><br><span class=\"hljs-regexp\">repo_gpgcheck=0</span><br><span class=\"hljs-regexp\">gpgkey=http:/</span><span class=\"hljs-regexp\">/mirrors.aliyun.com/kubernetes</span><span class=\"hljs-regexp\">/yum/doc</span><span class=\"hljs-regexp\">/yum-key.gpg</span><br><span class=\"hljs-regexp\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http:/</span><span class=\"hljs-regexp\">/mirrors.aliyun.com/kubernetes</span><span class=\"hljs-regexp\">/yum/doc</span><span class=\"hljs-regexp\">/rpm-package-key.gpg</span><br><span class=\"hljs-regexp\">EOF</span><br></code></pre>\r\n</section></li><li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">如果存在旧版本首先卸载旧版本，安装kubelet、kubeadm、kubectl，如果非Master可以不安装kubectl；</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs css\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\"><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#卸载<span class=\"hljs-selector-tag\">Kubernetes</span></span><br><span class=\"hljs-selector-tag\">yum</span>&nbsp;<span class=\"hljs-selector-tag\">remove</span>&nbsp;<span class=\"hljs-selector-tag\">-y</span>&nbsp;<span class=\"hljs-selector-tag\">kubelet</span>&nbsp;<span class=\"hljs-selector-tag\">kubeadm</span>&nbsp;<span class=\"hljs-selector-tag\">kubectl</span><br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#安装</span><br><span class=\"hljs-selector-tag\">yum</span>&nbsp;<span class=\"hljs-selector-tag\">install</span>&nbsp;<span class=\"hljs-selector-tag\">-y</span>&nbsp;<span class=\"hljs-selector-tag\">kubelet-1</span><span class=\"hljs-selector-class\">.21</span><span class=\"hljs-selector-class\">.2</span>&nbsp;<span class=\"hljs-selector-tag\">kubeadm-1</span><span class=\"hljs-selector-class\">.21</span><span class=\"hljs-selector-class\">.2</span>&nbsp;<span class=\"hljs-selector-tag\">kubectl-1</span><span class=\"hljs-selector-class\">.21</span><span class=\"hljs-selector-class\">.2</span><br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#非<span class=\"hljs-selector-tag\">master</span>可以采用以下命令</span><br><span class=\"hljs-selector-tag\">yum</span>&nbsp;<span class=\"hljs-selector-tag\">install</span>&nbsp;<span class=\"hljs-selector-tag\">-y</span>&nbsp;<span class=\"hljs-selector-tag\">kubelet-1</span><span class=\"hljs-selector-class\">.21</span><span class=\"hljs-selector-class\">.2</span>&nbsp;<span class=\"hljs-selector-tag\">kubeadm-1</span><span class=\"hljs-selector-class\">.21</span><span class=\"hljs-selector-class\">.2</span><br></code></pre>\r\n</section></li><li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">关闭Swap，这里简单聊下Kubernetes为什么会关闭Swap？Swap Space是磁盘上的一块区域，可以是一个分区，也可以是一个文件，或者是他们的组合。简单点说，当系统物理内存吃紧时，Linux会将内存中不常访问的数据保存到Swap上，这样系统就有更多的物理内存为各个进程服务，而当系统需要访问Swap上存储的内容时，再将Swap上的数据加载到内存中。Kubernetes关闭Swap一个是性能问题，开启Swap会严重影响性能（包括内存和I/O）；另一个是管理问题，开启Swap后通过Cgroups设置的内存上限就会失效，如果不关闭Kubernetes运行会出现错误， 即使安装成功了，node重启后也会出现kubernetes server运行错误;</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs javascript\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\">swapoff&nbsp;-a<br>yes&nbsp;|&nbsp;cp&nbsp;/etc/fstab&nbsp;/etc/fstab_bak<br>cat&nbsp;/etc/fstab_bak&nbsp;|grep&nbsp;-v&nbsp;swap&nbsp;&gt;&nbsp;<span class=\"hljs-regexp\">/etc/</span>fstab<br></code></pre>\r\n</section></li><li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">关闭SeLinux，也简单聊一下为什么关闭SeLinux？SELinux(Secure Enhanced Linux)安全增强的Linux是美国国家安全局NSA针对计算机基础结构安全开发的一个全新的Linux安全策略机制。SELinux可以允许系统管理员更加灵活的来定义安全策略。SELinux是一个内核级别的安全机制，从Linux2.6内核之后就将SELinux集成在了内核当中，因为SELinux是内核级别的，所以我们对于其配置文件的修改都是需要重新启动操作系统才能生效的。现在主流发现的Linux版本里面都集成了SELinux机制，CentOS/RHEL都会默认开启SELinux机制。这里为什么建议大家关闭SeLinux，我相信不是专门的运维可能懂这个的人也不多，所以为了防止大家遇到一些奇怪的问题，就把它关闭吧;</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs apache\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\"><span class=\"hljs-attribute\">setenforce</span>&nbsp;<span class=\"hljs-number\">0</span><br>sed&nbsp;-i&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"s/SELINUX=enforcing/SELINUX=disabled/g\"</span></span>&nbsp;/etc/selinux/config<br></code></pre>\r\n</section></li><li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">将Docker的Cgroup Driver 修改为systemd并且更改Docker为国内的镜像加速器，不然在为Kubernetes集群添加节点时会报错；</p>\r\n</section></li></ol>\r\n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs cpp\" style=\"word-wrap: break-word; margin: 0 2px; overflow-x: auto; padding: 15px 16px 16px; color: rgba(56, 58, 66, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; background: rgba(250, 250, 250, 1); border-radius: 5px\"><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#修改docker/daemon.json</span><br>cat&nbsp;&gt;&nbsp;/etc/docker/daemon.json&nbsp;&lt;&lt;EOF<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"exec-opts\"</span></span>:&nbsp;[<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"native.cgroupdriver=systemd\"</span></span>],<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"log-driver\"</span></span>:&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"json-file\"</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"log-opts\"</span></span>:&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"max-size\"</span></span>:&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"100m\"</span></span><br>&nbsp;&nbsp;&nbsp;&nbsp;},<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"storage-driver\"</span></span>:&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"overlay2\"</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"registry-mirrors\"</span></span>:[<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"https://kfwkfulq.mirror.aliyuncs.com\"</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"https://2lqq34jg.mirror.aliyuncs.com\"</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"https://pee6w651.mirror.aliyuncs.com\"</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"http://hub-mirror.c.163.com\"</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"https://docker.mirrors.ustc.edu.cn\"</span></span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"https://registry.docker-cn.com\"</span></span><br>&nbsp;&nbsp;&nbsp;&nbsp;]<br>}<br>EOF<br>mkdir&nbsp;-p&nbsp;/etc/systemd/system/docker.service.d<br></code></pre>\r\n<ol start=\"6\" data-tool=\"mdnice编辑器\" style=\"margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: rgba(0, 0, 0, 1); list-style-type: decimal\">\r\n<li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">设置网络配置相关的参数;</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs dos\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\"><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#增加配置</span><br>cat&nbsp;&lt;&lt;EOF&nbsp;&gt;&nbsp;/etc/sysctl.d/<br>k8s.confnet.ipv4.ip_forward=<span class=\"hljs-number\">1</span><br><span class=\"hljs-built_in\">net</span>.bridge.bridge-nf-<span class=\"hljs-keyword\">call</span>-ip6tables&nbsp;=&nbsp;<span class=\"hljs-number\">1</span><br><span class=\"hljs-built_in\">net</span>.bridge.bridge-nf-<span class=\"hljs-keyword\">call</span>-iptables&nbsp;=&nbsp;<span class=\"hljs-number\">1</span><br>EOF<br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#加载</span><br>sysctl&nbsp;--system<br></code></pre>\r\n</section></li><li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">重启docker，并设置开机启动kubelet；</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs shell\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\"><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\"><span class=\"hljs-meta\">#</span><span class=\"bash\">&nbsp;重启docker，并启动&nbsp;kubelet</span></span><br><span class=\"bash\">systemctl&nbsp;daemon-reloadsy</span><br><span class=\"bash\">stemctl&nbsp;restart&nbsp;docker</span><br><span class=\"bash\">systemctl&nbsp;</span><span class=\"hljs-built_in\" style=\"color: rgba(193, 132, 1, 1); line-height: 26px\"><span class=\"bash\"><span class=\"hljs-built_in\">enable</span></span></span><span class=\"bash\">&nbsp;kubelet&nbsp;&amp;&amp;&nbsp;systemctl&nbsp;start&nbsp;kubelet</span><br></code></pre>\r\n</section></li></ol>\r\n<h5 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 16px\"><span class=\"prefix\" style=\"display: none\"></span><span class=\"content\">初始化Master</span><span class=\"suffix\" style=\"display: none\"></span></h5>\r\n<ol data-tool=\"mdnice编辑器\" style=\"margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: rgba(0, 0, 0, 1); list-style-type: decimal\">\r\n<li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">配置Host相关内容；</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs dart\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\"><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#只在master节点执行</span><br><span class=\"hljs-built_in\" style=\"color: rgba(193, 132, 1, 1); line-height: 26px\"><span class=\"hljs-keyword\">export</span></span>&nbsp;MASTER_IP=<span class=\"hljs-number\">172.21</span><span class=\"hljs-number\">.122</span><span class=\"hljs-number\">.230</span><br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#替换为自己hostName</span><br><span class=\"hljs-built_in\" style=\"color: rgba(193, 132, 1, 1); line-height: 26px\">export</span>&nbsp;APISERVER_NAME=demo-master<span class=\"hljs-number\">-1</span><br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#设置Kubernetes容器组所在的网段</span><br><span class=\"hljs-built_in\" style=\"color: rgba(193, 132, 1, 1); line-height: 26px\"><span class=\"hljs-keyword\">export</span></span>&nbsp;POD_SUBNET=<span class=\"hljs-number\">10.100</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.0</span>/<span class=\"hljs-number\">16</span>echo&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"</span><span class=\"hljs-variable\" style=\"color: rgba(152, 104, 1, 1); line-height: 26px\"><span class=\"hljs-string\"><span class=\"hljs-subst\">${MASTER_IP}</span></span></span><span class=\"hljs-string\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"hljs-variable\" style=\"color: rgba(152, 104, 1, 1); line-height: 26px\"><span class=\"hljs-string\"><span class=\"hljs-subst\">${APISERVER_NAME}</span></span></span><span class=\"hljs-string\">\"</span></span>&nbsp;&gt;&gt;&nbsp;/etc/hosts<br></code></pre>\r\n</section></li><li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">配置kubeadm-config.xml相关参数，可以参考该<a href=\"https://pkg.go.dev/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta2\" style=\"text-decoration: none; color: rgba(30, 107, 184, 1); word-wrap: break-word; font-weight: bold; border-bottom: 1px solid rgba(30, 107, 184, 1)\">文章</a>，具体学习下参数含义；</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs lua\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\"><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#删除默认是版本</span><br>rm&nbsp;-f&nbsp;./kubeadm-<span class=\"hljs-built_in\">config</span>.yaml<br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#编辑kubeadm-config</span><br>cat&nbsp;&lt;&lt;EOF&nbsp;&gt;&nbsp;./kubeadm-<span class=\"hljs-built_in\">config</span>.yaml<br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#api的版本</span><br>apiVersion:&nbsp;kubeadm.k8s.<span class=\"hljs-built_in\">io</span>/v1beta2<br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#配置的种类</span><br>kind:&nbsp;ClusterConfiguration<br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#版本</span><br>kubernetesVersion:&nbsp;v1<span class=\"hljs-number\">.21</span><span class=\"hljs-number\">.2</span><br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#镜像拉取地址</span><br>imageRepository:&nbsp;registry.aliyuncs.com/google_containers<br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#api默认绑定的端口</span><br>controlPlaneEndpoint:&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"</span><span class=\"hljs-variable\" style=\"color: rgba(152, 104, 1, 1); line-height: 26px\"><span class=\"hljs-string\">${APISERVER_NAME}</span></span><span class=\"hljs-string\">:6443\"</span></span><br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#自定义的网络</span><br>networking:&nbsp;&nbsp;<br>&nbsp;serviceSubnet:&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"10.96.0.0/16\"</span></span>&nbsp;&nbsp;<br>&nbsp;podSubnet:&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"</span><span class=\"hljs-variable\" style=\"color: rgba(152, 104, 1, 1); line-height: 26px\"><span class=\"hljs-string\">${POD_SUBNET}</span></span><span class=\"hljs-string\">\"</span></span>&nbsp;&nbsp;<br>&nbsp;dnsDomain:&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"cluster.local\"</span></span><br>EOF<br></code></pre>\r\n</section></li><li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">初始化初始化Master节点，成功以后大致信息如下图;</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs mipsasm\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\">kubeadm&nbsp;init&nbsp;--<span class=\"hljs-built_in\">config</span>=kubeadm-<span class=\"hljs-built_in\">config</span>.yaml&nbsp;--upload-certs<br></code></pre>\r\n<figure style=\"margin: 10px 0; display: flex; flex-direction: column; justify-content: center; align-items: center\"><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/822780c70b2f455487bea25ab6a42b24~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"image.png\" style=\"display: block; margin: 0 auto; max-width: 100%\" class=\"medium-zoom-image\"><figcaption style=\"margin-top: 5px; text-align: center; color: rgba(136, 136, 136, 1); font-size: 14px\">image.png</figcaption></figure>\r\n<p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">如果出现以下错误，说明安装过kubeadm，使用以下命令进行初始化:</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs nginx\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\"><span class=\"hljs-attribute\">kubeadm</span> reset -f\r\n</code></pre>\r\n<figure style=\"margin: 10px 0; display: flex; flex-direction: column; justify-content: center; align-items: center\"><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7207e37d988c47a491a65274d336ad21~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"image.png\" style=\"display: block; margin: 0 auto; max-width: 100%\" class=\"medium-zoom-image\"><figcaption style=\"margin-top: 5px; text-align: center; color: rgba(136, 136, 136, 1); font-size: 14px\">image.png</figcaption></figure>\r\n</section></li><li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">配置kubectl；</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs coffeescript\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\">rm&nbsp;-rf&nbsp;<span class=\"hljs-regexp\">/root/</span>.kube<span class=\"hljs-regexp\">/</span><br><span class=\"hljs-regexp\">mkdir&nbsp;/root/</span>.kube<span class=\"hljs-regexp\">/</span><br><span class=\"hljs-regexp\">cp&nbsp;-i&nbsp;/etc/kubernetes/admin.conf&nbsp;/root/</span>.kube/config<br></code></pre>\r\n</section></li><li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">检查节点初始化的情况;</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs kotlin\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\"><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#查看各个组件执行的情况</span><br>watch&nbsp;kubectl&nbsp;<span class=\"hljs-keyword\">get</span>&nbsp;pod&nbsp;-n&nbsp;kube-system&nbsp;-o&nbsp;wide<br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#查看Master节点情况</span><br>kubectl&nbsp;<span class=\"hljs-keyword\">get</span>&nbsp;nodes&nbsp;-o&nbsp;wide<br></code></pre>\r\n<figure style=\"margin: 10px 0; display: flex; flex-direction: column; justify-content: center; align-items: center\"><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f3d2edf09aec4134b7fb1dd29d2ccb9f~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"image.png\" style=\"display: block; margin: 0 auto; max-width: 100%\" class=\"medium-zoom-image\"><figcaption style=\"margin-top: 5px; text-align: center; color: rgba(136, 136, 136, 1); font-size: 14px\">image.png</figcaption></figure>\r\n<figure style=\"margin: 10px 0; display: flex; flex-direction: column; justify-content: center; align-items: center\"><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f6c4f3832de0476085e88abd659f052b~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"image.png\" style=\"display: block; margin: 0 auto; max-width: 100%\" class=\"medium-zoom-image\"><figcaption style=\"margin-top: 5px; text-align: center; color: rgba(136, 136, 136, 1); font-size: 14px\">image.png</figcaption></figure>\r\n</section></li></ol>\r\n<h5 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 16px\"><span class=\"prefix\" style=\"display: none\"></span><span class=\"content\">安装网络插件</span><span class=\"suffix\" style=\"display: none\"></span></h5>\r\n<p data-tool=\"mdnice编辑器\" style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">这里我选择了Flannel作为我的网络插件;</p>\r\n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs apache\" style=\"word-wrap: break-word; margin: 0 2px; overflow-x: auto; padding: 15px 16px 16px; color: rgba(56, 58, 66, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; background: rgba(250, 250, 250, 1); border-radius: 5px\"><span class=\"hljs-built_in\" style=\"color: rgba(193, 132, 1, 1); line-height: 26px\"><span class=\"hljs-attribute\">export</span></span>&nbsp;POD_SUBNET=<span class=\"hljs-number\">10.100.0.0</span>/<span class=\"hljs-number\">16</span><br>kubectl&nbsp;apply&nbsp;-f&nbsp;https://kuboard.cn/install-script/v<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">21</span>.x/calico-operator.yaml<br>wget&nbsp;https://kuboard.cn/install-script/flannel/flannel-v<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">14</span>.<span class=\"hljs-number\">0</span>.yaml<br>sed&nbsp;-i&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"s#10.244.0.0/16#</span><span class=\"hljs-variable\" style=\"color: rgba(152, 104, 1, 1); line-height: 26px\"><span class=\"hljs-string\">${POD_SUBNET}</span></span><span class=\"hljs-string\">#\"</span></span>&nbsp;flannel-v<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">14</span>.<span class=\"hljs-number\">0</span>.yaml<br>kubectl&nbsp;apply&nbsp;-f&nbsp;./flannel-v<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">14</span>.<span class=\"hljs-number\">0</span>.yaml<br></code></pre>\r\n<h5 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 16px\"><span class=\"prefix\" style=\"display: none\"></span><span class=\"content\">初始化Work节点</span><span class=\"suffix\" style=\"display: none\"></span></h5>\r\n<ol data-tool=\"mdnice编辑器\" style=\"margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: rgba(0, 0, 0, 1); list-style-type: decimal\">\r\n<li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">在Master节点上获取join参数;</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs lua\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\">kubeadm&nbsp;token&nbsp;<span class=\"hljs-built_in\">create</span>&nbsp;<span class=\"hljs-comment\">--</span><span class=\"hljs-built_in\" style=\"color: rgba(193, 132, 1, 1); line-height: 26px\"><span class=\"hljs-comment\">print</span></span><span class=\"hljs-comment\">-join-command</span><br></code></pre>\r\n</section></li><li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">配置Work节点的host信息;</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs dart\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\"><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#&nbsp;只在master节点执行</span><br><span class=\"hljs-built_in\" style=\"color: rgba(193, 132, 1, 1); line-height: 26px\"><span class=\"hljs-keyword\">export</span></span>&nbsp;MASTER_IP=<span class=\"hljs-number\">172.21</span><span class=\"hljs-number\">.122</span><span class=\"hljs-number\">.230</span><br><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\">#&nbsp;替换为自己hostName</span><br><span class=\"hljs-built_in\" style=\"color: rgba(193, 132, 1, 1); line-height: 26px\">export</span>&nbsp;APISERVER_NAME=demo-master<span class=\"hljs-number\">-1</span><br><span class=\"hljs-built_in\" style=\"color: rgba(193, 132, 1, 1); line-height: 26px\">echo</span>&nbsp;<span class=\"hljs-string\" style=\"color: rgba(80, 161, 79, 1); line-height: 26px\"><span class=\"hljs-string\">\"</span><span class=\"hljs-variable\" style=\"color: rgba(152, 104, 1, 1); line-height: 26px\"><span class=\"hljs-string\"><span class=\"hljs-subst\">${MASTER_IP}</span></span></span><span class=\"hljs-string\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"hljs-variable\" style=\"color: rgba(152, 104, 1, 1); line-height: 26px\"><span class=\"hljs-string\"><span class=\"hljs-subst\">${APISERVER_NAME}</span></span></span><span class=\"hljs-string\">\"</span></span>&nbsp;&gt;&gt;&nbsp;/etc/hosts<br></code></pre>\r\n</section></li><li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">初始化Work节点，执行Master节点上获取到的Join参数;</p>\r\n<figure style=\"margin: 10px 0; display: flex; flex-direction: column; justify-content: center; align-items: center\"><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d3f8c05e19b84f99a83af2a7e35940b7~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"image.png\" style=\"display: block; margin: 0 auto; max-width: 100%\" class=\"medium-zoom-image\"><figcaption style=\"margin-top: 5px; text-align: center; color: rgba(136, 136, 136, 1); font-size: 14px\">image.png</figcaption></figure>\r\n</section></li><li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">在Master上检查初始化结果;</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs csharp\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\">kubectl&nbsp;<span class=\"hljs-keyword\">get</span>&nbsp;nodes&nbsp;-o&nbsp;wide<br></code></pre>\r\n<figure style=\"margin: 10px 0; display: flex; flex-direction: column; justify-content: center; align-items: center\"><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7f65d52058bc460d860baba2de6fde91~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"image.png\" style=\"display: block; margin: 0 auto; max-width: 100%\" class=\"medium-zoom-image\"><figcaption style=\"margin-top: 5px; text-align: center; color: rgba(136, 136, 136, 1); font-size: 14px\">image.png</figcaption></figure>\r\n</section></li></ol>\r\n<p data-tool=\"mdnice编辑器\" style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">恭喜你，至此安装完成!</p>\r\n<h3 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; border-bottom: 2px solid rgba(0, 172, 193, 1); padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 20px\"><span class=\"prefix\" style=\"font-weight: normal; background: rgba(0, 172, 193, 1); color: rgba(255, 255, 255, 1); padding: 3px 10px 0; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px; display: none\"></span><span class=\"content\" style=\"display: inline-block; font-weight: normal; background: rgba(0, 172, 193, 1); color: rgba(255, 255, 255, 1); padding: 3px 10px 0; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px\">实战</span><span class=\"suffix\" style=\"font-weight: normal; background: rgba(0, 172, 193, 1); color: rgba(255, 255, 255, 1); padding: 3px 10px 0; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px; display: none\"></span></h3>\r\n<p data-tool=\"mdnice编辑器\" style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">这个案例就简单创建一个运行着Nginx的Pod，体验一把Kubernetes的使用，此外建议大家再开始学习阶段不要去使用一些图形化工具，先把一些命令整体去了解一下，以后在使用图形化界面。</p>\r\n<ol data-tool=\"mdnice编辑器\" style=\"margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: rgba(0, 0, 0, 1); list-style-type: decimal\">\r\n<li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\">创建一个nginx-deployment.yaml文件，这里大家可以使用vscode去编辑，然后同步到服务器上，应该vscode也可以直接同步到服务器上，具体怎么配置大家自行百度，编写如下内容:</section></li></ol>\r\n<pre class=\"custom\" data-tool=\"mdnice编辑器\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs yaml\" style=\"word-wrap: break-word; margin: 0 2px; overflow-x: auto; padding: 15px 16px 16px; color: rgba(56, 58, 66, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; background: rgba(250, 250, 250, 1); border-radius: 5px\"><span class=\"hljs-comment\">#api版本</span>\r\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps/v1</span>\r\n<span class=\"hljs-comment\">#指定资源的角色</span>\r\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Deployment</span>\r\n<span class=\"hljs-comment\">#元数据名称</span>\r\n<span class=\"hljs-attr\">metadata:</span>\r\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx-deployment</span>\r\n<span class=\"hljs-comment\">#指定该资源的内容详情</span>\r\n<span class=\"hljs-attr\">spec:</span>\r\n  <span class=\"hljs-comment\">#选择器</span>\r\n  <span class=\"hljs-attr\">selector:</span>\r\n    <span class=\"hljs-attr\">matchLabels:</span>\r\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">nginx</span>\r\n  <span class=\"hljs-comment\">#Pod的定义</span>\r\n  <span class=\"hljs-attr\">template:</span>\r\n    <span class=\"hljs-attr\">metadata:</span>\r\n      <span class=\"hljs-attr\">labels:</span>\r\n        <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">nginx</span>\r\n    <span class=\"hljs-comment\">#指定该资源的内容</span>\r\n    <span class=\"hljs-attr\">spec:</span>\r\n      <span class=\"hljs-attr\">containers:</span>\r\n      <span class=\"hljs-comment\">#容器名称</span>\r\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx</span>\r\n        <span class=\"hljs-comment\">#镜像版本</span>\r\n        <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx:latest</span>\r\n        <span class=\"hljs-comment\">#资源的限制</span>\r\n        <span class=\"hljs-attr\">resources:</span>\r\n          <span class=\"hljs-attr\">limits:</span>\r\n            <span class=\"hljs-attr\">memory:</span> <span class=\"hljs-string\">\"128Mi\"</span>\r\n            <span class=\"hljs-attr\">cpu:</span> <span class=\"hljs-string\">\"500m\"</span>\r\n        <span class=\"hljs-comment\">#暴露的端口</span>\r\n        <span class=\"hljs-attr\">ports:</span>\r\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">80</span>\r\n</code><p><code class=\"hljs\" style=\"word-wrap: break-word; margin: 0 2px; overflow-x: auto; padding: 15px 16px 16px; color: rgba(56, 58, 66, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; background: rgba(250, 250, 250, 1); border-radius: 5px\"></code></p></pre><p></p>\r\n<ol start=\"2\" data-tool=\"mdnice编辑器\" style=\"margin-top: 8px; margin-bottom: 8px; padding-left: 25px; color: rgba(0, 0, 0, 1); list-style-type: decimal\">\r\n<li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">在Master上运行该资源；</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs css\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\"><span class=\"hljs-selector-tag\">kubectl</span>&nbsp;<span class=\"hljs-selector-tag\">create</span>&nbsp;<span class=\"hljs-selector-tag\">-f</span>&nbsp;<span class=\"hljs-selector-tag\">nginx-deployment</span><span class=\"hljs-selector-class\">.yaml</span><br></code></pre>\r\n</section></li><li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">检查资源是否创建成功，这里我通过标签选择器进行查看，所以跟-l的参数；</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs csharp\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\">kubectl&nbsp;<span class=\"hljs-keyword\">get</span>&nbsp;pods&nbsp;-l&nbsp;app=nginx<br></code></pre>\r\n<figure style=\"margin: 10px 0; display: flex; flex-direction: column; justify-content: center; align-items: center\"><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/902670782fcc46349057c2bc2cb8aae9~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"image.png\" style=\"display: block; margin: 0 auto; max-width: 100%\" class=\"medium-zoom-image\"><figcaption style=\"margin-top: 5px; text-align: center; color: rgba(136, 136, 136, 1); font-size: 14px\">image.png</figcaption></figure>\r\n</section></li><li style=\"margin-bottom: 0.5em\"><section style=\"margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; color: rgba(1, 1, 1, 1); font-weight: 500\"><p style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">查看Pod的整个详情;</p>\r\n<pre class=\"custom\" style=\"margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.55)\"><span style=\"display: block; background: url(&quot;https://files.mdnice.com/user/3441/876cad08-0422-409d-bb5a-08afec5da8ee.svg&quot;) 10px 10px / 40px no-repeat rgba(250, 250, 250, 1); height: 30px; width: 100%; margin-bottom: -7px; border-radius: 5px\"></span><code class=\"hljs apache\" style=\"overflow-x: auto; -webkit-overflow-scrolling: touch; font-size: 14px; word-wrap: break-word; padding: 15px 4px 2px; margin: 0 2px; color: rgba(30, 107, 184, 1); background: rgba(250, 250, 250, 1); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; border-radius: 5px\"><span class=\"hljs-comment\" style=\"color: rgba(160, 161, 167, 1); font-style: italic; line-height: 26px\"><span class=\"hljs-comment\">#后面跟着具体的pod名称</span></span><br><span class=\"hljs-comment\">kubectl&nbsp;describe&nbsp;pod&nbsp;nginx-deployment-7dc45fbd74-5bh2z</span><br></code></pre>\r\n<figure style=\"margin: 10px 0; display: flex; flex-direction: column; justify-content: center; align-items: center\"><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3f1c7961098143b6bd28d3d2364afc5d~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"image.png\" style=\"display: block; margin: 0 auto; max-width: 100%\" class=\"medium-zoom-image\"><figcaption style=\"margin-top: 5px; text-align: center; color: rgba(136, 136, 136, 1); font-size: 14px\">image.png</figcaption></figure>\r\n</section></li></ol>\r\n<h3 data-tool=\"mdnice编辑器\" style=\"margin: 30px 0 15px; border-bottom: 2px solid rgba(0, 172, 193, 1); padding: 0; font-weight: bold; color: rgba(0, 0, 0, 1); font-size: 20px\"><span class=\"prefix\" style=\"font-weight: normal; background: rgba(0, 172, 193, 1); color: rgba(255, 255, 255, 1); padding: 3px 10px 0; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px; display: none\"></span><span class=\"content\" style=\"display: inline-block; font-weight: normal; background: rgba(0, 172, 193, 1); color: rgba(255, 255, 255, 1); padding: 3px 10px 0; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px\">结束</span><span class=\"suffix\" style=\"font-weight: normal; background: rgba(0, 172, 193, 1); color: rgba(255, 255, 255, 1); padding: 3px 10px 0; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px; display: none\"></span></h3>\r\n<p data-tool=\"mdnice编辑器\" style=\"font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: rgba(0, 0, 0, 1)\">欢迎大家点点关注，点点赞!\r\n<img src=\"https://img2018.cnblogs.com/blog/1005447/201906/1005447-20190620221533393-1847070636.png\" alt=\"\" style=\"display: block; margin: 0 auto; max-width: 100%\"></p>\r\n</section>\r\n</div>\r\n<div class=\"clear\"></div>\r\n<div id=\"blog_post_info_block\"><div id=\"BlogPostCategory\">\r\n    分类: \r\n            <a href=\"https://www.cnblogs.com/wtzbk/category/1990124.html\" target=\"_blank\">DevOps</a></div>\r\n\r\n\r\n    <div id=\"blog_post_info\">\r\n<div id=\"green_channel\">\r\n        <a href=\"javascript:void(0);\" id=\"green_channel_digg\" onclick=\"DiggIt(15216488,cb_blogId,1);green_channel_success(this,\'谢谢推荐！\');\">好文要顶</a>\r\n        <a id=\"green_channel_follow\" onclick=\"follow(\'a820f8b4-055d-e611-9fc1-ac853d9f53cc\');\" href=\"javascript:void(0);\">关注我</a>\r\n    <a id=\"green_channel_favorite\" onclick=\"AddToWz(cb_entryId);return false;\" href=\"javascript:void(0);\">收藏该文</a>\r\n    <a id=\"green_channel_weibo\" href=\"javascript:void(0);\" title=\"分享至新浪微博\" onclick=\"ShareToTsina()\"><img src=\"https://common.cnblogs.com/images/icon_weibo_24.png\" alt=\"\"></a>\r\n    <a id=\"green_channel_wechat\" href=\"javascript:void(0);\" title=\"分享至微信\" onclick=\"shareOnWechat()\"><img src=\"https://common.cnblogs.com/images/wechat.png\" alt=\"\"></a>\r\n</div>\r\n<div id=\"author_profile\">\r\n    <div id=\"author_profile_info\" class=\"author_profile_info\">\r\n            <a href=\"https://home.cnblogs.com/u/wtzbk/\" target=\"_blank\"><img src=\"https://pic.cnblogs.com/face/1005447/20161026091740.png\" class=\"author_avatar\" alt=\"\"></a>\r\n        <div id=\"author_profile_detail\" class=\"author_profile_info\">\r\n            <a href=\"https://home.cnblogs.com/u/wtzbk/\">大魔王先生</a><br>\r\n            <a href=\"https://home.cnblogs.com/u/wtzbk/followees/\">关注 - 31</a><br>\r\n            <a href=\"https://home.cnblogs.com/u/wtzbk/followers/\">粉丝 - 196</a>\r\n        </div>\r\n    </div>\r\n    <div class=\"clear\"></div>\r\n    <div id=\"author_profile_honor\"></div>\r\n    <div id=\"author_profile_follow\">\r\n                <a href=\"javascript:void(0);\" onclick=\"follow(\'a820f8b4-055d-e611-9fc1-ac853d9f53cc\');return false;\">+加关注</a>\r\n    </div>\r\n</div>\r\n<div id=\"div_digg\">\r\n    <div class=\"diggit\" onclick=\"votePost(15216488,\'Digg\')\">\r\n        <span class=\"diggnum\" id=\"digg_count\">3</span>\r\n    </div>\r\n    <div class=\"buryit\" onclick=\"votePost(15216488,\'Bury\')\">\r\n        <span class=\"burynum\" id=\"bury_count\">0</span>\r\n    </div>\r\n    <div class=\"clear\"></div>\r\n    <div class=\"diggword\" id=\"digg_tips\">\r\n    </div>\r\n</div>\r\n\r\n<script type=\"text/javascript\">\r\n    currentDiggType = 0;\r\n</script></div>\r\n    <div class=\"clear\"></div>\r\n    <div id=\"post_next_prev\">\r\n\r\n    <a href=\"https://www.cnblogs.com/wtzbk/p/15154423.html\" class=\"p_n_p_prefix\">« </a> 上一篇：    <a href=\"https://www.cnblogs.com/wtzbk/p/15154423.html\" title=\"发布于 2021-08-18 08:47\">Kubernetes介绍</a>\r\n\r\n</div>\r\n</div>\r\n            </div>\r\n            <div class=\"postDesc\">posted @ \r\n<span id=\"post-date\">2021-09-02 08:47</span>&nbsp;\r\n<a href=\"https://www.cnblogs.com/wtzbk/\">大魔王先生</a>&nbsp;\r\n阅读(<span id=\"post_view_count\">184</span>)&nbsp;\r\n评论(<span id=\"post_comment_count\">0</span>)&nbsp;\r\n<a href=\"https://i.cnblogs.com/EditPosts.aspx?postid=15216488\" rel=\"nofollow\">编辑</a>&nbsp;\r\n<a href=\"javascript:void(0)\" onclick=\"AddToWz(15216488);return false;\">收藏</a>&nbsp;\r\n<a href=\"javascript:void(0)\" onclick=\"reportManager.report({ currentUserId: \'\', targetType: \'blogPost\', targetId: \'15216488\', targetLink: \'https://www.cnblogs.com/wtzbk/p/15216488.html\', title: \'Kubernetes环境搭建\' })\">举报</a></div>\r\n        </div>\r\n	    \r\n	    \r\n    </div>',0,1,0,2,1),(3,'单片机学习（九）定时器扫描按钮和数码管与PWM的使用','一、使用定时器扫描按钮和数码管 1. 使用定时器进行扫描的缘由 之前扫描按钮和数码管都是需要通过CPU主循环进行的，使用这种方式有着很大的弊端，(1)首先是会占用CPU的资源，在扫描按钮和数码管时会浪费一定的时间，(2)其次是我们的按钮检测是通过松手检测进行的，当我们按下按钮还没有松开时，程序即会进 ...','2021-09-01 02:23:53.670314','<div id=\"topics\">\r\n        <div class=\"post\">\r\n            <h1 class=\"postTitle\">\r\n                \r\n<a id=\"cb_post_title_url\" class=\"postTitle2 vertical-middle\" href=\"https://www.cnblogs.com/coderaniu/p/15218259.html\">\r\n    <span>Spring系列之事物是如何管理的</span>\r\n    \r\n\r\n\r\n\r\n</a>\r\n\r\n            </h1>\r\n            <div class=\"clear\"></div>\r\n            <div class=\"postBody\">\r\n                <div id=\"cnblogs_post_body\" class=\"blogpost-body cnblogs-markdown\">\r\n<h2 id=\"前言\">前言</h2>\r\n<p>我们都知道Spring给我们提供了很多抽象，比如我们在操作数据库的过程中，它为我们提供了事物方面的抽象，让我们可以非常方便的以事物方式操作数据库。不管你用JDBC、Mybatis、Hibernate等任何一种方式操作数据库，也不管你使用DataSource还是JTA的事物，Spring事物抽象管理都能很好的把他统一在一起。接下来看一下事物的抽象核心接口</p>\r\n<h3 id=\"spring事务抽象\">Spring事务抽象</h3>\r\n<p><strong>PlatformTransactionManager是事物管理器接口</strong></p>\r\n<pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token comment\">//事务管理器接口有以下几个接口，获取事物信息，提交和回滚</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">PlatformTransactionManager</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token class-name\">TransactionStatus</span> <span class=\"token function\">getTransaction</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">TransactionDefinition</span> var1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">TransactionException</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">void</span> <span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TransactionStatus</span> var1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">TransactionException</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">void</span> <span class=\"token function\">rollback</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TransactionStatus</span> var1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">TransactionException</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 42px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span></span><span class=\"line-numbers-sizer\" style=\"display: none;\"></span></code></pre>\r\n<p><strong>常见的事物管理器有以下几种</strong></p>\r\n<ul>\r\n<li>DataSourceTransactionManager</li>\r\n<li>HibernateTransactionManager</li>\r\n<li>JtaTransactionManager<br>\r\n这些管理器都实现了PlatformTransactionManager中的三个接口，实现逻辑略有差别，但是对用户来讲区别不大</li>\r\n</ul>\r\n<p><strong>定义事物的一些参数：</strong><br>\r\n一些事物的参数在TransactionDefinition.java中，详情如下：</p>\r\n<pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">TransactionDefinition</span> <span class=\"token punctuation\">{</span>\r\n	  <span class=\"token keyword\">int</span> PROPAGATION_REQUIRED <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> PROPAGATION_SUPPORTS <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> PROPAGATION_MANDATORY <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> PROPAGATION_REQUIRES_NEW <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> PROPAGATION_NOT_SUPPORTED <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> PROPAGATION_NEVER <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> PROPAGATION_NESTED <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token comment\">//默认隔离级别，和数据库的隔离级别一致</span>\r\n    <span class=\"token keyword\">int</span> ISOLATION_DEFAULT <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> ISOLATION_READ_UNCOMMITTED <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> ISOLATION_READ_COMMITTED <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> ISOLATION_REPEATABLE_READ <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> ISOLATION_SERIALIZABLE <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\r\n		<span class=\"token comment\">//默认不超时</span>\r\n    <span class=\"token keyword\">int</span> TIMEOUT_DEFAULT <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span></span><span class=\"line-numbers-sizer\" style=\"display: none;\"></span></code></pre>\r\n<p><strong>下面两张图对这些参数进行了说明：</strong><br>\r\n<strong>7种事务传播特性：</strong><br>\r\n<img src=\"https://img2020.cnblogs.com/other/2034674/202109/2034674-20210902125334268-249163978.png\" alt=\"file\" loading=\"lazy\" class=\"medium-zoom-image\"><br>\r\n<strong>四种事务隔离级别：</strong><br>\r\n在看事务隔离级别前需要先了解下什么是脏读、不可重复读、幻读<br>\r\n<strong>脏读：</strong> 脏读就是一个事物未提交的数据，被另外一个事物读到了，显然这种情况不可接受<br>\r\n<strong>不可重复读：</strong> 不可重复读是指在一个事务内，多次读同一数据，前后读取的结果不一致。<br>\r\n<strong>幻读：</strong> 事务A对表中的一个数据进行了修改，这种修改涉及到表中的全部数据行。同时事务B也修改了这个表中的数据，这种修改是向表中插入一行新数据。那么就会发生操作事务A的用户发现表中还存在没有修改的数据行，就好像发生了幻觉一样<br>\r\n知道了以上几个概念，我们来看看隔离级别：<br>\r\n<img src=\"https://img2020.cnblogs.com/other/2034674/202109/2034674-20210902125334507-479548247.png\" alt=\"file\" loading=\"lazy\" class=\"medium-zoom-image\"></p>\r\n<p>这里我们可以看到，Spring并不是提供了所有的事物管理的实现，而是提供了标准的事物管理器的操作接口PlatformTransactionManager， 并且规范了其行为，具体的事物实现由各个平台自行实现。这就是Spring的事物抽象。</p>\r\n<h3 id=\"spring之编程式事物\">Spring之编程式事物</h3>\r\n<p>Spring提供了TransactionTemplate工具类可以很方便的使用编程式事务。默认情况下TransactionTemplate使用的是DataSourceTransactionManager。<br>\r\n在Spring上下文中，我们不配置TransactionTemplate这个bean，也能获取到TransactionTemplate。比如下面的例子。</p>\r\n<pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Service</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserInfoService</span> <span class=\"token punctuation\">{</span>\r\n\r\n    <span class=\"token annotation punctuation\">@Resource</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserInfoDAO</span> userInfoDAO<span class=\"token punctuation\">;</span>\r\n    <span class=\"token annotation punctuation\">@Autowired</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">TransactionTemplate</span> transactionTemplate<span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateUser1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        transactionTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>transactionStatus <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{</span>\r\n            userInfoDAO<span class=\"token punctuation\">.</span><span class=\"token function\">updateUserName</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"zhangsanfeng\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            transactionTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>transactionStatus2 <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{</span>\r\n                userInfoDAO<span class=\"token punctuation\">.</span><span class=\"token function\">updateUserName</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"lisi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span></span><span class=\"line-numbers-sizer\" style=\"display: none;\"></span></code></pre>\r\n<p>由于Spring默认的事物传播特性是PROPAGATION_REQUIRED，我们来做一下验证，看是不是这样<br>\r\n<img src=\"https://img2020.cnblogs.com/other/2034674/202109/2034674-20210902125334814-1797101309.png\" alt=\"file\" loading=\"lazy\" class=\"medium-zoom-image\"><br>\r\n<img src=\"https://img2020.cnblogs.com/other/2034674/202109/2034674-20210902125335370-211702706.png\" alt=\"file\" loading=\"lazy\" class=\"medium-zoom-image\"><br>\r\n上面两幅图可以看出，TransactionStatus中的newTransaction属性，第一个是true，第二个是false，正好符合PROPAGATION_REQUIRED所描述的情况。其他的传播特性可以自己去验证。</p>\r\n<h3 id=\"声明式事物\">声明式事物</h3>\r\n<p>除了编程式事物外，Spring还为我们提供了声明式事物。使用@Transactional注解。<br>\r\n@Transactional 可以作用于接口、接口方法、类以及类方法上。当作用于类上时，该类的所有 public 方法将都具有该类型的事务属性，同时，我们也可以在方法级别使用该注解来覆盖类级别的定义。</p>\r\n<p>虽然 @Transactional 注解可以作用于接口、接口方法、类以及类方法上，但是 Spring 建议不要在接口或者接口方法上使用该注解，因为这只有在使用基于接口的代理时它才会生效。另外， @Transactional 注解应该只被应用到 public 方法上，这是由 Spring AOP 的本质决定的。如果你在 protected、private 或者默认可见性的方法上使用 @Transactional 注解，这将被忽略，也不会抛出任何异常。</p>\r\n<p>@Transactional的rollbackFor属性可以设置一个 Throwable 的数组，用来表明如果方法抛出这些异常，则进行事务回滚。默认情况下如果不配置rollbackFor属性，那么事务只会在遇到RuntimeException的时候才会回滚。<br>\r\n下面的代码事物就不会生效：</p>\r\n<pre class=\"line-numbers language-java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@Transactional</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateUser2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">int</span> r1 <span class=\"token operator\">=</span> userInfoDAO<span class=\"token punctuation\">.</span><span class=\"token function\">updateUserName</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"wanger\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">int</span> r2 <span class=\"token operator\">=</span> userInfoDAO<span class=\"token punctuation\">.</span><span class=\"token function\">updateUserName</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"mawu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r2<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span></span><span class=\"line-numbers-sizer\" style=\"display: none;\"></span></code></pre>\r\n<p>如果我们把抛出的异常改成RuntimeException，这时候事物就会生效了。或者指定异常让事物生效，比如 @Transactional(rollbackFor = Exception.class),这样碰到所有的异常事物都会生效了。</p>\r\n<h4 id=\"为什么加了transactional注解事物就生效了？\">为什么加了@Transactional注解事物就生效了？</h4>\r\n<p>这是因为Spring容器会为加了这个注解的对象生成一个代理对象，实际调用的时候，实际上是调用的代理对象。  代理对象的实现了AOP的增强，实现了事物的实现。<br>\r\n<img src=\"https://img2020.cnblogs.com/other/2034674/202109/2034674-20210902125335799-854302552.png\" alt=\"file\" loading=\"lazy\"></p>\r\n<h4 id=\"通过注解怎么实现指定的传播特性和隔离级别的？\">通过注解怎么实现指定的传播特性和隔离级别的？</h4>\r\n<pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">Transactional</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token annotation punctuation\">@AliasFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transactionManager\"</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token class-name\">String</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token annotation punctuation\">@AliasFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token class-name\">String</span> <span class=\"token function\">transactionManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">label</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token class-name\">Propagation</span> <span class=\"token function\">propagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token class-name\">Propagation</span><span class=\"token punctuation\">.</span>REQUIRED<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token class-name\">Isolation</span> <span class=\"token function\">isolation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token class-name\">Isolation</span><span class=\"token punctuation\">.</span>DEFAULT<span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">int</span> <span class=\"token function\">timeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token class-name\">String</span> <span class=\"token function\">timeoutString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">boolean</span> <span class=\"token function\">readOnly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Throwable</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">rollbackFor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">rollbackForClassName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Throwable</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">noRollbackFor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">noRollbackForClassName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span></span><span class=\"line-numbers-sizer\" style=\"display: none;\"></span></code></pre>\r\n<p>代码中可以看出，我们可以指定隔离级别和传播特性，在Spring为我们生成代理类的时候，会读取这些属性，体现在增强逻辑中。</p>\r\n<h3 id=\"事物失效的8种情况及解决办法\">事物失效的8种情况及解决办法</h3>\r\n<h4 id=\"数据库引擎不支持事务\">数据库引擎不支持事务</h4>\r\n<p>这里以 MySQL 为例，其 MyISAM 引擎是不支持事务操作的，InnoDB 才是支持事务的引擎，一般要支持事务都会使用 InnoDB，这时候选择支持事物的数据库即可（好像是废话，哈哈哈）</p>\r\n<h4 id=\"没有被-spring-管理\">没有被 Spring 管理</h4>\r\n<p>这个好像没什么可说的，脱离了Spring的管理，还谈什么Spring事物管理。</p>\r\n<h4 id=\"方法不是-public-的\">方法不是 public 的</h4>\r\n<p>@Transactional 只能用于 public 的方法上，否则事务不会失效，如果要用在非 public 方法上，可以开启 AspectJ 代理模式。</p>\r\n<h4 id=\"数据源没有配置事务管理器\">数据源没有配置事务管理器</h4>\r\n<p>相当于没开启事务管理，如果不是Springboot情况需要进行如下操作。</p>\r\n<pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Bean</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">PlatformTransactionManager</span> <span class=\"token function\">transactionManager</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataSource</span> dataSource<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataSourceTransactionManager</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span></span><span class=\"line-numbers-sizer\" style=\"display: none;\"></span></code></pre>\r\n<p>如果是SpringBoot，在启动类上直接加上注解@EnableTransactionManagement即可。</p>\r\n<h4 id=\"传播特性配错了\">传播特性配错了</h4>\r\n<p>传播特性配置成，Propagation.NOT_SUPPORTED或者Propagation.NOT_SUPPORTED，改成支持事物的传播特性即可。</p>\r\n<h4 id=\"异常类型错误\">异常类型错误</h4>\r\n<p>因为默认的异常类型是运行时异常，如果抛出了其他异常就不生效。<br>\r\n解决方式：<br>\r\n1、将异常改成运行时异常<br>\r\n2、指定异常进行事物回滚，如：@Transactional(rollbackFor = Exception.class)</p>\r\n<h4 id=\"异常被吃掉了\">异常被吃掉了</h4>\r\n<p>如果你代码这么写,事物不生效：</p>\r\n<pre class=\"line-numbers language-java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>rollbackFor <span class=\"token operator\">=</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateUser2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">int</span> r1 <span class=\"token operator\">=</span> userInfoDAO<span class=\"token punctuation\">.</span><span class=\"token function\">updateUserName</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">int</span> r2 <span class=\"token operator\">=</span> userInfoDAO<span class=\"token punctuation\">.</span><span class=\"token function\">updateUserName</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r2<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n            \r\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            \r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span></span><span class=\"line-numbers-sizer\" style=\"display: none;\"></span></code></pre>\r\n<p>解决办法：  必须要抛出异常，否则Spring事务管理，不会走到回滚逻辑</p>\r\n<h4 id=\"类内部调用\">类内部调用</h4>\r\n<pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Service</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserInfoService</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">justUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">updateUser2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>rollbackFor <span class=\"token operator\">=</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateUser2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span></span><span class=\"line-numbers-sizer\" style=\"display: none;\"></span></code></pre>\r\n<p>上述代码不生效，因为内部调用不会涉及到代理类的调用，更不会有AOP的增强，因此不会生效。<br>\r\n解决办法：<br>\r\n<strong>1、自注入</strong></p>\r\n<pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Service</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserInfoService</span> <span class=\"token punctuation\">{</span>\r\n   <span class=\"token annotation punctuation\">@Autowired</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserInfoService</span> userInfoService<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">justUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        userInfoService<span class=\"token punctuation\">.</span><span class=\"token function\">updateUser2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>rollbackFor <span class=\"token operator\">=</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateUser2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span></span><span class=\"line-numbers-sizer\" style=\"display: none;\"></span></code></pre>\r\n<p><strong>2、Spring上下文</strong></p>\r\n<pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Service</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserInfoService</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token class-name\">ApplicationContext</span> applicationContext<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">justUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n		   <span class=\"token class-name\">UserInfoService</span> userInfoService <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">UserInfoService</span><span class=\"token punctuation\">)</span> applicationContext<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userInfoService\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        userInfoService<span class=\"token punctuation\">.</span><span class=\"token function\">updateUser2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>rollbackFor <span class=\"token operator\">=</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateUser2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 42px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span></span><span class=\"line-numbers-sizer\" style=\"display: none;\"></span></code></pre>\r\n<p><strong>3、获取他的代理类，直接调用代理类</strong></p>\r\n<pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Service</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserInfoService</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">justUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n		   <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserInfoService</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">AopContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentProxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">updateUser2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>rollbackFor <span class=\"token operator\">=</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateUser2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span><span style=\"height: 21px;\"></span></span><span class=\"line-numbers-sizer\" style=\"display: none;\"></span></code></pre>\r\n<p>----------------------------END---------------------------<br>\r\n更多Spring相关知识，请关注我，各平台都是同一个ID</p>\r\n\r\n</div>\r\n<div class=\"clear\"></div>\r\n<div id=\"blog_post_info_block\">\r\n<div id=\"EntryTag\">\r\n    标签: \r\n            <a href=\"https://www.cnblogs.com/coderaniu/tag/SpringBoot/\">SpringBoot</a>,             <a href=\"https://www.cnblogs.com/coderaniu/tag/Spring/\">Spring</a>,             <a href=\"https://www.cnblogs.com/coderaniu/tag/Spring%E4%BA%8B%E5%8A%A1/\">Spring事务</a></div>\r\n\r\n    <div id=\"blog_post_info\">\r\n<div id=\"green_channel\">\r\n        <a href=\"javascript:void(0);\" id=\"green_channel_digg\" onclick=\"DiggIt(15218259,cb_blogId,1);green_channel_success(this,\'谢谢推荐！\');\">好文要顶</a>\r\n        <a id=\"green_channel_follow\" onclick=\"follow(\'2622b125-c1b5-4154-03cd-08d7f1c7f589\');\" href=\"javascript:void(0);\">关注我</a>\r\n    <a id=\"green_channel_favorite\" onclick=\"AddToWz(cb_entryId);return false;\" href=\"javascript:void(0);\">收藏该文</a>\r\n    <a id=\"green_channel_weibo\" href=\"javascript:void(0);\" title=\"分享至新浪微博\" onclick=\"ShareToTsina()\"><img src=\"https://common.cnblogs.com/images/icon_weibo_24.png\" alt=\"\"></a>\r\n    <a id=\"green_channel_wechat\" href=\"javascript:void(0);\" title=\"分享至微信\" onclick=\"shareOnWechat()\"><img src=\"https://common.cnblogs.com/images/wechat.png\" alt=\"\"></a>\r\n</div>\r\n<div id=\"author_profile\">\r\n    <div id=\"author_profile_info\" class=\"author_profile_info\">\r\n            <a href=\"https://home.cnblogs.com/u/coderaniu/\" target=\"_blank\"><img src=\"https://pic.cnblogs.com/face/2034674/20200511170532.png\" class=\"author_avatar\" alt=\"\"></a>\r\n        <div id=\"author_profile_detail\" class=\"author_profile_info\">\r\n            <a href=\"https://home.cnblogs.com/u/coderaniu/\">程序员阿牛</a><br>\r\n            <a href=\"https://home.cnblogs.com/u/coderaniu/followees/\">关注 - 0</a><br>\r\n            <a href=\"https://home.cnblogs.com/u/coderaniu/followers/\">粉丝 - 3</a>\r\n        </div>\r\n    </div>\r\n    <div class=\"clear\"></div>\r\n    <div id=\"author_profile_honor\"></div>\r\n    <div id=\"author_profile_follow\">\r\n                <a href=\"javascript:void(0);\" onclick=\"follow(\'2622b125-c1b5-4154-03cd-08d7f1c7f589\');return false;\">+加关注</a>\r\n    </div>\r\n</div>\r\n<div id=\"div_digg\">\r\n    <div class=\"diggit\" onclick=\"votePost(15218259,\'Digg\')\">\r\n        <span class=\"diggnum\" id=\"digg_count\">0</span>\r\n    </div>\r\n    <div class=\"buryit\" onclick=\"votePost(15218259,\'Bury\')\">\r\n        <span class=\"burynum\" id=\"bury_count\">0</span>\r\n    </div>\r\n    <div class=\"clear\"></div>\r\n    <div class=\"diggword\" id=\"digg_tips\">\r\n    </div>\r\n</div>\r\n\r\n<script type=\"text/javascript\">\r\n    currentDiggType = 0;\r\n</script></div>\r\n    <div class=\"clear\"></div>\r\n    <div id=\"post_next_prev\">\r\n\r\n    <a href=\"https://www.cnblogs.com/coderaniu/p/15203751.html\" class=\"p_n_p_prefix\">« </a> 上一篇：    <a href=\"https://www.cnblogs.com/coderaniu/p/15203751.html\" title=\"发布于 2021-08-29 21:44\">Spring系列之集成Druid连接池及监控配置</a>\r\n\r\n</div>\r\n</div>\r\n            </div>\r\n            <div class=\"postDesc\">posted @ \r\n<span id=\"post-date\">2021-09-02 12:54</span>&nbsp;\r\n<a href=\"https://www.cnblogs.com/coderaniu/\">程序员阿牛</a>&nbsp;\r\n阅读(<span id=\"post_view_count\">54</span>)&nbsp;\r\n评论(<span id=\"post_comment_count\">0</span>)&nbsp;\r\n<a href=\"https://i.cnblogs.com/EditPosts.aspx?postid=15218259\" rel=\"nofollow\">编辑</a>&nbsp;\r\n<a href=\"javascript:void(0)\" onclick=\"AddToWz(15218259);return false;\">收藏</a>&nbsp;\r\n<a href=\"javascript:void(0)\" onclick=\"reportManager.report({ currentUserId: \'\', targetType: \'blogPost\', targetId: \'15218259\', targetLink: \'https://www.cnblogs.com/coderaniu/p/15218259.html\', title: \'Spring系列之事物是如何管理的\' })\">举报</a></div>\r\n        </div>\r\n	    \r\n	    \r\n    </div>',0,1,0,3,2),(4,'数据结构与算法——排序算法-归并排序','简单介绍 **归并排序（merge sort）**是利用 归并 的思想实现的排序方法，该算法采用经典的 分治（divide-and-conquer）策略 ： 分（divide）：将问题分成一些小的问题，然后递归求解 治（conquer）：将分的阶段得到的各答案「修补」在一起 即：分而治之 该算法是采 ...','2021-08-01 05:44:20.064000','<div id=\"topics\">\r\n        <div class=\"post\">\r\n            <h1 class=\"postTitle\">\r\n                \r\n<a id=\"cb_post_title_url\" class=\"postTitle2 vertical-middle\" href=\"https://www.cnblogs.com/zhangweizhong/p/13210294.html\">\r\n    <span>Spring Boot 入门系列（二十三）整合Mybatis，实现多数据源配置！</span>\r\n    \r\n\r\n\r\n\r\n</a>\r\n\r\n            </h1>\r\n            <div class=\"clear\"></div>\r\n            <div class=\"postBody\">\r\n                <div id=\"cnblogs_post_body\" class=\"blogpost-body blogpost-body-html\">\r\n<p>d之前介绍了Spring Boot 整合mybatis 使用注解方式配置的方式实现增删改查以及一些复杂自定义的sql 语句&nbsp;<span class=\"fontstyle2\"><span class=\"fontstyle0\"><span class=\"fontstyle2\"><span class=\"fontstyle0\"><span class=\"fontstyle2\"><span class=\"fontstyle0\"><span class=\"fontstyle2\"><span class=\"fontstyle0\">。想必大家对spring boot 项目中，如何使用mybatis 有了一定的了解。但在很多业务场景下，我们需要在一个项目中配置多个数据源来实现业务逻辑，例如：现有电商业务，商品和库存数据分别放在不同的数据库中，这就要求我们的系统架构支持同时配置多个数据源实现相关业务操作。那么Spring Boot 如何应对这种多数据源的场景呢？其实，在 Spring Boot 项目中配置多数据源十分便捷。接下来就聊一聊 Spring Boot 整合mybatis 实现多数据源的相关配置。<span class=\"fontstyle0\"><span class=\"fontstyle2\"><span class=\"fontstyle0\"><span class=\"fontstyle2\"><span class=\"fontstyle0\"><span class=\"fontstyle2\"><span class=\"fontstyle0\"><span class=\"fontstyle2\"><span class=\"fontstyle0\"><br></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\r\n<p>关于整合mybatis 部分，之前已经介绍过，这里直接讲 Mybatis 多数据源的配置的配置实现，不清楚的朋友可以看看之前的文章：<a href=\"https://www.cnblogs.com/zhangweizhong/category/1657780.html\">https://www.cnblogs.com/zhangweizhong/category/1657780.html</a>。</p>\r\n<p>&nbsp;</p>\r\n<h2>一、配置数据库</h2>\r\n<p>首先在系统配置文件中，需要配置多个数据源，即在application.properties 文件中增加如下配置：</p>\r\n<div class=\"cnblogs_code\"><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img src=\"//common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color: rgba(0, 0, 0, 1)\"># mybatis 多数据源配置\r\n# 数据库1的配置\r\nspring.datasource.test1.driver</span>-<span style=\"color: rgba(0, 0, 255, 1)\">class</span>-name =<span style=\"color: rgba(0, 0, 0, 1)\"> com.mysql.jdbc.Driver\r\nspring.datasource.test1.jdbc</span>-url = jdbc:mysql:<span style=\"color: rgba(0, 128, 0, 1)\">//</span><span style=\"color: rgba(0, 128, 0, 1)\">localhost:3306/zwz_test?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span>\r\nspring.datasource.test1.username =<span style=\"color: rgba(0, 0, 0, 1)\"> root\r\nspring.datasource.test1.password </span>=<span style=\"color: rgba(0, 0, 0, 1)\"> root\r\n# 数据库2的配置\r\nspring.datasource.test2.driver</span>-<span style=\"color: rgba(0, 0, 255, 1)\">class</span>-name =<span style=\"color: rgba(0, 0, 0, 1)\"> com.mysql.jdbc.Driver\r\nspring.datasource.test2.jdbc</span>-url = jdbc:mysql:<span style=\"color: rgba(0, 128, 0, 1)\">//</span><span style=\"color: rgba(0, 128, 0, 1)\">localhost:3306/zwz_test2?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span>\r\nspring.datasource.test2.username =<span style=\"color: rgba(0, 0, 0, 1)\"> root\r\nspring.datasource.test2.password </span>= root</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img src=\"//common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div></div>\r\n<p>注意：</p>\r\n<p>1、这里配置的是两个一样的数据库zwz_test 和zwz_test2。</p>\r\n<p>&nbsp;2、数据库连接的配置使用jdbc-url ， 不是之前的url ，这点需要注意。</p>\r\n<p>&nbsp;</p>\r\n<h2>二、数据源配置类</h2>\r\n<p>1、主数据源配置类</p>\r\n<p>在config 包中，创建&nbsp;DataSource1Config 类。此类配置主数据源。</p>\r\n<div class=\"cnblogs_code\"><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img src=\"//common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color: rgba(0, 0, 0, 1)\">package com.weiz.config;\r\n\r\nimport org.apache.ibatis.session.SqlSessionFactory;\r\nimport org.mybatis.spring.SqlSessionFactoryBean;\r\nimport org.mybatis.spring.SqlSessionTemplate;\r\nimport org.mybatis.spring.annotation.MapperScan;\r\nimport org.springframework.beans.factory.annotation.Qualifier;\r\nimport org.springframework.boot.context.properties.ConfigurationProperties;\r\nimport org.springframework.boot.jdbc.DataSourceBuilder;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.context.annotation.Primary;\r\nimport org.springframework.jdbc.datasource.DataSourceTransactionManager;\r\n\r\nimport javax.sql.DataSource;\r\n@Configuration\r\n@MapperScan(basePackages </span>= <span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">com.weiz.mapper.test1</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span>, sqlSessionFactoryRef = <span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test1SqlSessionFactory</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">)\r\n</span><span style=\"color: rgba(0, 0, 255, 1)\">public</span> <span style=\"color: rgba(0, 0, 255, 1)\">class</span><span style=\"color: rgba(0, 0, 0, 1)\"> DataSource1Config {\r\n        @Bean(name </span>= <span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test1DataSource</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">)\r\n        @ConfigurationProperties(prefix </span>= <span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">spring.datasource.test1</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">)\r\n        @Primary\r\n        </span><span style=\"color: rgba(0, 0, 255, 1)\">public</span><span style=\"color: rgba(0, 0, 0, 1)\"> DataSource testDataSource() {\r\n                </span><span style=\"color: rgba(0, 0, 255, 1)\">return</span><span style=\"color: rgba(0, 0, 0, 1)\"> DataSourceBuilder.create().build();\r\n        }\r\n\r\n        @Bean(name </span>= <span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test1SqlSessionFactory</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">)\r\n        @Primary\r\n        </span><span style=\"color: rgba(0, 0, 255, 1)\">public</span> SqlSessionFactory testSqlSessionFactory(@Qualifier(<span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test1DataSource</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">) DataSource dataSource) throws Exception {\r\n                SqlSessionFactoryBean bean </span>= <span style=\"color: rgba(0, 0, 255, 1)\">new</span><span style=\"color: rgba(0, 0, 0, 1)\"> SqlSessionFactoryBean();\r\n                bean.setDataSource(dataSource);\r\n                </span><span style=\"color: rgba(0, 0, 255, 1)\">return</span><span style=\"color: rgba(0, 0, 0, 1)\"> bean.getObject();\r\n        }\r\n\r\n        @Bean(name </span>= <span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test1TransactionManager</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">)\r\n        @Primary\r\n        </span><span style=\"color: rgba(0, 0, 255, 1)\">public</span> DataSourceTransactionManager testTransactionManager(@Qualifier(<span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test1DataSource</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">) DataSource dataSource) {\r\n                </span><span style=\"color: rgba(0, 0, 255, 1)\">return</span> <span style=\"color: rgba(0, 0, 255, 1)\">new</span><span style=\"color: rgba(0, 0, 0, 1)\"> DataSourceTransactionManager(dataSource);\r\n        }\r\n\r\n        @Bean(name </span>= <span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test1SqlSessionTemplate</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">)\r\n        @Primary\r\n        </span><span style=\"color: rgba(0, 0, 255, 1)\">public</span> SqlSessionTemplate testSqlSessionTemplate(@Qualifier(<span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test1SqlSessionFactory</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">) SqlSessionFactory sqlSessionFactory) throws Exception {\r\n                </span><span style=\"color: rgba(0, 0, 255, 1)\">return</span> <span style=\"color: rgba(0, 0, 255, 1)\">new</span><span style=\"color: rgba(0, 0, 0, 1)\"> SqlSessionTemplate(sqlSessionFactory);\r\n        }\r\n}</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img src=\"//common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div></div>\r\n<p>&nbsp;</p>\r\n<p>2、配置其他数据源</p>\r\n<p>在config 包中，创建DataSource2Config 类。此类配置其他普通数据源。</p>\r\n<div class=\"cnblogs_code\"><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img src=\"//common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color: rgba(0, 0, 0, 1)\">package com.weiz.config;\r\n\r\nimport org.apache.ibatis.session.SqlSessionFactory;\r\nimport org.mybatis.spring.SqlSessionFactoryBean;\r\nimport org.mybatis.spring.SqlSessionTemplate;\r\nimport org.mybatis.spring.annotation.MapperScan;\r\nimport org.springframework.beans.factory.annotation.Qualifier;\r\nimport org.springframework.boot.context.properties.ConfigurationProperties;\r\nimport org.springframework.boot.jdbc.DataSourceBuilder;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.context.annotation.Primary;\r\nimport org.springframework.jdbc.datasource.DataSourceTransactionManager;\r\n\r\nimport javax.sql.DataSource;\r\n\r\n@Configuration\r\n@MapperScan(basePackages </span>= <span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">com.weiz.mapper.test2</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span>, sqlSessionFactoryRef = <span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test2SqlSessionFactory</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">)\r\n</span><span style=\"color: rgba(0, 0, 255, 1)\">public</span> <span style=\"color: rgba(0, 0, 255, 1)\">class</span><span style=\"color: rgba(0, 0, 0, 1)\"> DataSource2Config {\r\n        @Bean(name </span>= <span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test2DataSource</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">)\r\n        @ConfigurationProperties(prefix </span>= <span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">spring.datasource.test2</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">)\r\n        </span><span style=\"color: rgba(0, 0, 255, 1)\">public</span><span style=\"color: rgba(0, 0, 0, 1)\"> DataSource testDataSource() {\r\n                </span><span style=\"color: rgba(0, 0, 255, 1)\">return</span><span style=\"color: rgba(0, 0, 0, 1)\"> DataSourceBuilder.create().build();\r\n        }\r\n\r\n        @Bean(name </span>= <span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test2SqlSessionFactory</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">)\r\n        </span><span style=\"color: rgba(0, 0, 255, 1)\">public</span> SqlSessionFactory testSqlSessionFactory(@Qualifier(<span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test2DataSource</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">) DataSource dataSource) throws Exception {\r\n                SqlSessionFactoryBean bean </span>= <span style=\"color: rgba(0, 0, 255, 1)\">new</span><span style=\"color: rgba(0, 0, 0, 1)\"> SqlSessionFactoryBean();\r\n                bean.setDataSource(dataSource);\r\n                </span><span style=\"color: rgba(0, 0, 255, 1)\">return</span><span style=\"color: rgba(0, 0, 0, 1)\"> bean.getObject();\r\n        }\r\n\r\n        @Bean(name </span>= <span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test2TransactionManager</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">)\r\n        </span><span style=\"color: rgba(0, 0, 255, 1)\">public</span> DataSourceTransactionManager testTransactionManager(@Qualifier(<span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test2DataSource</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">) DataSource dataSource) {\r\n                </span><span style=\"color: rgba(0, 0, 255, 1)\">return</span> <span style=\"color: rgba(0, 0, 255, 1)\">new</span><span style=\"color: rgba(0, 0, 0, 1)\"> DataSourceTransactionManager(dataSource);\r\n        }\r\n\r\n        @Bean(name </span>= <span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test2SqlSessionTemplate</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">)\r\n        </span><span style=\"color: rgba(0, 0, 255, 1)\">public</span> SqlSessionTemplate testSqlSessionTemplate(@Qualifier(<span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(128, 0, 0, 1)\">test2SqlSessionFactory</span><span style=\"color: rgba(128, 0, 0, 1)\">\"</span><span style=\"color: rgba(0, 0, 0, 1)\">) SqlSessionFactory sqlSessionFactory) throws Exception {\r\n                </span><span style=\"color: rgba(0, 0, 255, 1)\">return</span> <span style=\"color: rgba(0, 0, 255, 1)\">new</span><span style=\"color: rgba(0, 0, 0, 1)\"> SqlSessionTemplate(sqlSessionFactory);\r\n        }\r\n}</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img src=\"//common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div></div>\r\n<p>说明，&nbsp;DataSource1Config 和&nbsp;&nbsp;DataSource2Config 即是相关的主数据源配置类和普通数据源配置类。</p>\r\n<p>com.weiz.mapper.test1 为 扫描的mapper的路径。</p>\r\n<p>可以看到两个数据源都配置的各自的DataSource、SqlSessionFactory、TransactionManager和SqlSessionTemplate 。</p>\r\n<p>&nbsp;</p>\r\n<p>虽然两个类看着差不多，但是<span style=\"color: rgba(255, 102, 0, 1)\">需要特别注意以下几点</span>：</p>\r\n<p>　　1、主数据源配置需要加@Primary 注解，其他普通数据源不能加这个注解，否则会报错，复制的时候小心。</p>\r\n<p>　　2、各个数据源配置的 basePackages 扫描路径需要配置正确。配置错了不会出异常，但是运行的时候，会找错数据库。</p>\r\n<p>&nbsp;</p>\r\n<p>3、调用测试</p>\r\n<p><span class=\"fontstyle0\">首先，创建</span>com.weiz.mapper.test1 和&nbsp;com.weiz.mapper.test2 包，<span class=\"fontstyle0\">将之前的UserMapper ，重名命为User1Mapper 和User2Mapper 复制到相应的包中。</span></p>\r\n<p><span class=\"fontstyle0\">然后，UserServiceImpl 分别注入两个不同的 <span class=\"fontstyle2\">Mapper<span class=\"fontstyle0\">，想操作哪个数据源就使用哪个数据源的 <span class=\"fontstyle2\">Mapper <span class=\"fontstyle0\">进行操作处理。</span></span></span></span></span></p>\r\n<div class=\"cnblogs_code\"><div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img src=\"//common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div>\r\n<pre><span style=\"color: rgba(0, 0, 0, 1)\">package com.weiz.service.impl;\r\n\r\nimport com.weiz.mapper.test1.User1Mapper;\r\nimport com.weiz.mapper.test2.User2Mapper;\r\nimport com.weiz.pojo.User;\r\nimport com.weiz.service.UserService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\n@Service\r\n</span><span style=\"color: rgba(0, 0, 255, 1)\">public</span> <span style=\"color: rgba(0, 0, 255, 1)\">class</span><span style=\"color: rgba(0, 0, 0, 1)\"> UserServiceImpl implements UserService {\r\n\r\n    @Autowired\r\n    </span><span style=\"color: rgba(0, 0, 255, 1)\">private</span><span style=\"color: rgba(0, 0, 0, 1)\"> User1Mapper user1Mapper;\r\n\r\n    @Autowired\r\n    </span><span style=\"color: rgba(0, 0, 255, 1)\">private</span><span style=\"color: rgba(0, 0, 0, 1)\"> User2Mapper user2Mapper;\r\n\r\n    @Override\r\n    </span><span style=\"color: rgba(0, 0, 255, 1)\">public</span> <span style=\"color: rgba(0, 0, 255, 1)\">int</span><span style=\"color: rgba(0, 0, 0, 1)\"> saveUser(User user) {\r\n        user1Mapper.insert(user);\r\n        </span><span style=\"color: rgba(0, 0, 255, 1)\">return</span><span style=\"color: rgba(0, 0, 0, 1)\"> user2Mapper.insert(user);\r\n    }\r\n\r\n    @Override\r\n    </span><span style=\"color: rgba(0, 0, 255, 1)\">public</span> <span style=\"color: rgba(0, 0, 255, 1)\">int</span><span style=\"color: rgba(0, 0, 0, 1)\"> updateUser(User user) {\r\n        user1Mapper.updateByPrimaryKey(user);\r\n        </span><span style=\"color: rgba(0, 0, 255, 1)\">return</span><span style=\"color: rgba(0, 0, 0, 1)\"> user2Mapper.updateByPrimaryKey(user);\r\n    }\r\n\r\n    @Override\r\n    </span><span style=\"color: rgba(0, 0, 255, 1)\">public</span> <span style=\"color: rgba(0, 0, 255, 1)\">int</span><span style=\"color: rgba(0, 0, 0, 1)\"> deleteUser(String userId) {\r\n        user1Mapper.deleteByPrimaryKey(userId);\r\n        </span><span style=\"color: rgba(0, 0, 255, 1)\">return</span><span style=\"color: rgba(0, 0, 0, 1)\"> user2Mapper.deleteByPrimaryKey(userId);\r\n    }\r\n\r\n    @Override\r\n    </span><span style=\"color: rgba(0, 0, 255, 1)\">public</span><span style=\"color: rgba(0, 0, 0, 1)\"> User queryUserById(String userId) {\r\n        user1Mapper.selectByPrimaryKey(userId);\r\n        </span><span style=\"color: rgba(0, 0, 255, 1)\">return</span><span style=\"color: rgba(0, 0, 0, 1)\"> user2Mapper.selectByPrimaryKey(userId);\r\n    }\r\n}</span></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a href=\"javascript:void(0);\" onclick=\"copyCnblogsCode(this)\" title=\"复制代码\"><img src=\"//common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\"></a></span></div></div>\r\n<p>这里是一个简单的测试程序，实际项目中是根据实际的业务，调用不同的mapper 实现的，或者通过注解配置，动态切换数据源。</p>\r\n<p>&nbsp;</p>\r\n<h2>三、测试</h2>\r\n<p>启动项目，浏览器中输入如下地址： http://localhost:8088/mybatis/saveuser ，可以看到两个数据库中，都增加了一条用户信息。</p>\r\n<p>数据库 zwz_test 中 用户表sys_user 增加了一条记录。</p>\r\n<p><img src=\"https://img2020.cnblogs.com/blog/306976/202006/306976-20200630185033356-997305211.png\" alt=\"\" loading=\"lazy\" class=\"medium-zoom-image\"></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>数据库 zwz_test2 中 用户表sys_user 也增加了一条同样的记录。</p>\r\n<p><img src=\"https://img2020.cnblogs.com/blog/306976/202006/306976-20200630184955391-1372184813.png\" alt=\"\" loading=\"lazy\" class=\"medium-zoom-image\"></p>\r\n<p>&nbsp;</p>\r\n<h2>四、可能会遇到的坑</h2>\r\n<p>1、数据库连接的配置使用jdbc-url ， 不是之前的url 。这点需要注意。</p>\r\n<p>2、主数据源配置需要加@Primary 注解，其他普通数据源不能加这个注解，否则会报错，复制的时候小心。</p>\r\n<p>3、各个数据源配置的 basePackages 扫描路径需要配置正确。配置错了不会出异常，但是运行的时候，会找错数据库。</p>\r\n<p>4、如果Mybatis使用的是xml 配置版，xml位置需要在每个config显示置顶位置。</p>\r\n<p>&nbsp;</p>\r\n<h2><span class=\"bjh-p\">最后</span></h2>\r\n<p>以上，就把Spring Boot整合Mybatis，实现多数据源配置的功能介绍完了。操作看似简单，其实还是得小心仔细。不然很容易出错。</p>\r\n<p>此外配置多数据源之后，还涉及到数据源切换的问题，网上有很多种方法，比较流行的就是druid框架实现多数据源切换。这个后面再讲吧。</p>\r\n<p>还有，这里没有使用事务，如果采用事务需要分别配置每个数据源的事务，并采用事务性注解进行统一管理。这里不细说大家自己研究吧。</p>\r\n<p>这个系列课程的完整源码，也会提供给大家。大家关注我的微信公众号（架构师精进），回复：springboot源码。获取这个系列课程的完整源码。</p>\r\n<p><span class=\"fontstyle0\"><span class=\"fontstyle2\"><span class=\"fontstyle0\"><span class=\"fontstyle2\"><span class=\"fontstyle0\">&nbsp;</span></span></span></span></span></p>\r\n</div>\r\n<div id=\"MySignature\">\r\n    <p style=\"border-top: #e0e0e0 1px dashed; border-right: #e0e0e0 1px dashed; border-bottom: #e0e0e0 1px dashed; border-left: #e0e0e0 1px dashed; padding-top: 10px; padding-right: 10px; padding-bottom: 20px; padding-left: 25px; background: #e5f1f4 no-repeat 1% 50%; font-family: 微软雅黑; font-size: 14px\" id=\"PSignature\">\r\n                <br>\r\n                作者：<b><span style=\"font-size: 12px; color: red\">章为忠</span></b>\r\n                <br>\r\n                如有问题，可以微信：<strong>18618243664</strong>&nbsp;联系我，非常感谢。\r\n                <br>\r\n <br>\r\n          <strong>关注我的微信公众号，获取相关的<span style=\"font-size: 12px; color: red\"><strong> 源代码及视频资料</strong></span>。</strong>\r\n <br>\r\n\r\n<img src=\"https://images2015.cnblogs.com/blog/306976/201509/306976-20150905110907420-2085368719.jpg\">\r\n            </p>\r\n</div>\r\n<div class=\"clear\"></div>\r\n<div id=\"blog_post_info_block\"><div id=\"BlogPostCategory\">\r\n    分类: \r\n            <a href=\"https://www.cnblogs.com/zhangweizhong/category/1657780.html\" target=\"_blank\">SpringBoot入门系列</a></div>\r\n\r\n\r\n    <div id=\"blog_post_info\">\r\n<div id=\"green_channel\">\r\n        <a href=\"javascript:void(0);\" id=\"green_channel_digg\" onclick=\"DiggIt(13210294,cb_blogId,1);green_channel_success(this,\'谢谢推荐！\');\">好文要顶</a>\r\n        <a id=\"green_channel_follow\" onclick=\"follow(\'a6084bc8-e391-e011-a53f-842b2b196315\');\" href=\"javascript:void(0);\">关注我</a>\r\n    <a id=\"green_channel_favorite\" onclick=\"AddToWz(cb_entryId);return false;\" href=\"javascript:void(0);\">收藏该文</a>\r\n    <a id=\"green_channel_weibo\" href=\"javascript:void(0);\" title=\"分享至新浪微博\" onclick=\"ShareToTsina()\"><img src=\"https://common.cnblogs.com/images/icon_weibo_24.png\" alt=\"\"></a>\r\n    <a id=\"green_channel_wechat\" href=\"javascript:void(0);\" title=\"分享至微信\" onclick=\"shareOnWechat()\"><img src=\"https://common.cnblogs.com/images/wechat.png\" alt=\"\"></a>\r\n</div>\r\n<div id=\"author_profile\">\r\n    <div id=\"author_profile_info\" class=\"author_profile_info\">\r\n            <a href=\"https://home.cnblogs.com/u/zhangweizhong/\" target=\"_blank\"><img src=\"https://pic.cnblogs.com/face/306976/20140507100407.png\" class=\"author_avatar\" alt=\"\"></a>\r\n        <div id=\"author_profile_detail\" class=\"author_profile_info\">\r\n            <a href=\"https://home.cnblogs.com/u/zhangweizhong/\">章为忠</a><br>\r\n            <a href=\"https://home.cnblogs.com/u/zhangweizhong/followees/\">关注 - 11</a><br>\r\n            <a href=\"https://home.cnblogs.com/u/zhangweizhong/followers/\">粉丝 - 701</a>\r\n        </div>\r\n    </div>\r\n    <div class=\"clear\"></div>\r\n    <div id=\"author_profile_honor\"></div>\r\n    <div id=\"author_profile_follow\">\r\n                <a href=\"javascript:void(0);\" onclick=\"follow(\'a6084bc8-e391-e011-a53f-842b2b196315\');return false;\">+加关注</a>\r\n    </div>\r\n</div>\r\n<div id=\"div_digg\">\r\n    <div class=\"diggit\" onclick=\"votePost(13210294,\'Digg\')\">\r\n        <span class=\"diggnum\" id=\"digg_count\">0</span>\r\n    </div>\r\n    <div class=\"buryit\" onclick=\"votePost(13210294,\'Bury\')\">\r\n        <span class=\"burynum\" id=\"bury_count\">0</span>\r\n    </div>\r\n    <div class=\"clear\"></div>\r\n    <div class=\"diggword\" id=\"digg_tips\">\r\n    </div>\r\n</div>\r\n\r\n<script type=\"text/javascript\">\r\n    currentDiggType = 0;\r\n</script></div>\r\n    <div class=\"clear\"></div>\r\n    <div id=\"post_next_prev\">\r\n\r\n    <a href=\"https://www.cnblogs.com/zhangweizhong/p/12305846.html\" class=\"p_n_p_prefix\">« </a> 上一篇：    <a href=\"https://www.cnblogs.com/zhangweizhong/p/12305846.html\" title=\"发布于 2021-09-01 10:28\">这些经常被忽视的SQL错误用法，你有没有踩过坑？</a>\r\n\r\n</div>\r\n</div>\r\n            </div>\r\n            <div class=\"postDesc\">posted @ \r\n<span id=\"post-date\">2021-09-02 11:46</span>&nbsp;\r\n<a href=\"https://www.cnblogs.com/zhangweizhong/\">章为忠</a>&nbsp;\r\n阅读(<span id=\"post_view_count\">80</span>)&nbsp;\r\n评论(<span id=\"post_comment_count\">0</span>)&nbsp;\r\n<a href=\"https://i.cnblogs.com/EditPosts.aspx?postid=13210294\" rel=\"nofollow\">编辑</a>&nbsp;\r\n<a href=\"javascript:void(0)\" onclick=\"AddToWz(13210294);return false;\">收藏</a>&nbsp;\r\n<a href=\"javascript:void(0)\" onclick=\"reportManager.report({ currentUserId: \'\', targetType: \'blogPost\', targetId: \'13210294\', targetLink: \'https://www.cnblogs.com/zhangweizhong/p/13210294.html\', title: \'Spring Boot 入门系列（二十三）整合Mybatis，实现多数据源配置！\' })\">举报</a></div>\r\n        </div>\r\n	    \r\n	    \r\n    </div>',2,1,0,1,1),(5,'asdafasdaasfdas','afafadashajksfada,smdlajhafsjkfmandafasdasdasfdas...','2021-09-04 16:30:40.277599','afafadashajksfada,smdlajhafsjkfmandafasdasdasfdas',0,0,0,NULL,4),(6,'asdafasdaasfdas','asffffffffsssssssssssssssssssssssssssssssssssssssssssss...','2021-09-04 16:31:04.965126','asffffffffsssssssssssssssssssssssssssssssssssssssssssss',0,0,0,NULL,4);
/*!40000 ALTER TABLE `blog_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_article2tag`
--

DROP TABLE IF EXISTS `blog_article2tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_article2tag` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  UNIQUE KEY `blog_article2tag_article_id_tag_id_b0745f42_uniq` (`article_id`,`tag_id`),
  KEY `blog_article2tag_tag_id_389b9a96_fk_blog_tag_nid` (`tag_id`),
  CONSTRAINT `blog_article2tag_article_id_753a2b60_fk_blog_article_nid` FOREIGN KEY (`article_id`) REFERENCES `blog_article` (`nid`),
  CONSTRAINT `blog_article2tag_tag_id_389b9a96_fk_blog_tag_nid` FOREIGN KEY (`tag_id`) REFERENCES `blog_tag` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_article2tag`
--

LOCK TABLES `blog_article2tag` WRITE;
/*!40000 ALTER TABLE `blog_article2tag` DISABLE KEYS */;
INSERT INTO `blog_article2tag` VALUES (2,2,2),(3,3,3),(1,4,1),(4,4,2);
/*!40000 ALTER TABLE `blog_article2tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_articleupdown`
--

DROP TABLE IF EXISTS `blog_articleupdown`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_articleupdown` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `is_up` tinyint(1) NOT NULL,
  `article_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`nid`),
  UNIQUE KEY `blog_articleupdown_article_id_user_id_fa3d0c08_uniq` (`article_id`,`user_id`),
  KEY `blog_articleupdown_user_id_2c0ebe49_fk_blog_userinfo_nid` (`user_id`),
  CONSTRAINT `blog_articleupdown_article_id_9be1a8a2_fk_blog_article_nid` FOREIGN KEY (`article_id`) REFERENCES `blog_article` (`nid`),
  CONSTRAINT `blog_articleupdown_user_id_2c0ebe49_fk_blog_userinfo_nid` FOREIGN KEY (`user_id`) REFERENCES `blog_userinfo` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_articleupdown`
--

LOCK TABLES `blog_articleupdown` WRITE;
/*!40000 ALTER TABLE `blog_articleupdown` DISABLE KEYS */;
INSERT INTO `blog_articleupdown` VALUES (1,1,1,1),(2,1,2,1),(3,1,3,1),(4,1,4,1),(5,1,1,4);
/*!40000 ALTER TABLE `blog_articleupdown` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_blog`
--

DROP TABLE IF EXISTS `blog_blog`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_blog` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(64) NOT NULL,
  `site_name` varchar(64) NOT NULL,
  `theme` varchar(32) NOT NULL,
  PRIMARY KEY (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_blog`
--

LOCK TABLES `blog_blog` WRITE;
/*!40000 ALTER TABLE `blog_blog` DISABLE KEYS */;
INSERT INTO `blog_blog` VALUES (1,'番茄社区','周公瑾','zhougongjin.css'),(2,'诸葛亮','zhugeliang','zhugeliang.css');
/*!40000 ALTER TABLE `blog_blog` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_category`
--

DROP TABLE IF EXISTS `blog_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_category` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(32) NOT NULL,
  `blog_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  KEY `blog_category_blog_id_80f0723a_fk_blog_blog_nid` (`blog_id`),
  CONSTRAINT `blog_category_blog_id_80f0723a_fk_blog_blog_nid` FOREIGN KEY (`blog_id`) REFERENCES `blog_blog` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_category`
--

LOCK TABLES `blog_category` WRITE;
/*!40000 ALTER TABLE `blog_category` DISABLE KEYS */;
INSERT INTO `blog_category` VALUES (1,'python',1),(2,'vscode',1),(3,'单片机',2);
/*!40000 ALTER TABLE `blog_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_comment`
--

DROP TABLE IF EXISTS `blog_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_comment` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `create_time` datetime(6) NOT NULL,
  `content` varchar(255) NOT NULL,
  `article_id` int(11) NOT NULL,
  `parent_comment_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  KEY `blog_comment_article_id_3d58bca6_fk_blog_article_nid` (`article_id`),
  KEY `blog_comment_parent_comment_id_26791b9a_fk_blog_comment_nid` (`parent_comment_id`),
  KEY `blog_comment_user_id_59a54155_fk_blog_userinfo_nid` (`user_id`),
  CONSTRAINT `blog_comment_article_id_3d58bca6_fk_blog_article_nid` FOREIGN KEY (`article_id`) REFERENCES `blog_article` (`nid`),
  CONSTRAINT `blog_comment_parent_comment_id_26791b9a_fk_blog_comment_nid` FOREIGN KEY (`parent_comment_id`) REFERENCES `blog_comment` (`nid`),
  CONSTRAINT `blog_comment_user_id_59a54155_fk_blog_userinfo_nid` FOREIGN KEY (`user_id`) REFERENCES `blog_userinfo` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_comment`
--

LOCK TABLES `blog_comment` WRITE;
/*!40000 ALTER TABLE `blog_comment` DISABLE KEYS */;
INSERT INTO `blog_comment` VALUES (1,'2021-09-02 17:42:53.741329','66666666666666666666666666',4,NULL,1),(2,'2021-09-03 13:22:21.024894','大佬牛皮\n',4,NULL,1),(3,'2021-09-03 13:22:28.355863','阿哲',4,NULL,1),(4,'2021-09-03 13:22:34.343572','爱你摸摸哒',4,NULL,1),(5,'2021-09-03 14:22:17.181355','写的什么JB玩意儿\n',4,NULL,1),(6,'2021-09-03 14:22:48.771279','写的真好',4,NULL,1),(7,'2021-09-03 14:48:03.316418','可以的',4,NULL,3),(9,'2021-09-03 15:22:16.747379','adasd',4,3,3),(10,'2021-09-03 17:40:50.382562','100\n',4,9,3),(11,'2021-09-03 17:40:55.736098','999',4,9,3),(12,'2021-09-04 14:01:07.831233','大帅哥真牛皮',4,NULL,3),(13,'2021-09-04 14:03:37.072113','大帅哥真牛皮',4,NULL,3),(14,'2021-09-04 16:18:49.832179','zhouaflalkfhaslkfdjasd\n\n',1,NULL,4),(15,'2021-09-04 16:19:00.557236','adasdasdafddawd',1,14,4);
/*!40000 ALTER TABLE `blog_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_tag`
--

DROP TABLE IF EXISTS `blog_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_tag` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(32) NOT NULL,
  `blog_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  KEY `blog_tag_blog_id_a8c60c42_fk_blog_blog_nid` (`blog_id`),
  CONSTRAINT `blog_tag_blog_id_a8c60c42_fk_blog_blog_nid` FOREIGN KEY (`blog_id`) REFERENCES `blog_blog` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_tag`
--

LOCK TABLES `blog_tag` WRITE;
/*!40000 ALTER TABLE `blog_tag` DISABLE KEYS */;
INSERT INTO `blog_tag` VALUES (1,'数据',1),(2,'结构',1),(3,'单片机',2);
/*!40000 ALTER TABLE `blog_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_userinfo`
--

DROP TABLE IF EXISTS `blog_userinfo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_userinfo` (
  `password` varchar(128) NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) NOT NULL,
  `first_name` varchar(150) NOT NULL,
  `last_name` varchar(150) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `telephone` varchar(11) DEFAULT NULL,
  `avatar` varchar(100) NOT NULL,
  `create_time` datetime(6) NOT NULL,
  `blog_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`nid`),
  UNIQUE KEY `username` (`username`),
  UNIQUE KEY `telephone` (`telephone`),
  UNIQUE KEY `blog_id` (`blog_id`),
  CONSTRAINT `blog_userinfo_blog_id_aa34488f_fk_blog_blog_nid` FOREIGN KEY (`blog_id`) REFERENCES `blog_blog` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_userinfo`
--

LOCK TABLES `blog_userinfo` WRITE;
/*!40000 ALTER TABLE `blog_userinfo` DISABLE KEYS */;
INSERT INTO `blog_userinfo` VALUES ('pbkdf2_sha256$260000$WHOECdssBsM42DBJgizVc2$OOdnaNFE+uCxG+TFnku08mOKqsiJfuorGmqctA3p9Zs=','2021-09-04 16:36:05.038798',1,'zhougongjin','','','zhougongjin@qwe.com',1,1,'2021-08-28 07:02:53.000000',1,'17788855445','avatars/1623839575101.jpeg','2021-08-28 07:02:53.901782',1),('zhuzhu123',NULL,0,'zhugeliang','','','qwrqwr@asd.ocm',0,1,'2021-09-01 02:17:16.000000',2,'17811555327','/avatars/default.png','2021-09-01 02:17:52.993007',2),('pbkdf2_sha256$260000$zVuqv9XFcaPey99Pdxj1o7$xF9k10g3a8GgSAyTpC5OTVaoW1GMfDwCpO3aO2pbXQA=','2021-09-03 14:47:13.624577',1,'zhugeliang123','','','8855@qq.cn',1,1,'2021-09-03 14:45:54.984053',3,NULL,'/avatars/default.png','2021-09-03 14:45:55.049053',NULL),('pbkdf2_sha256$260000$hKp0k27rIKev63o2qFkzOY$q4t+fNAH07rzD+Q8cy+y43lB1tI4j/bvaqrABxBlhIE=','2021-09-04 16:18:34.625981',0,'zhugeliang555','','','885521@qq.com',0,1,'2021-09-04 16:11:46.542881',4,NULL,'avatars/QQ图片20210708140412.png','2021-09-04 16:11:46.607883',NULL);
/*!40000 ALTER TABLE `blog_userinfo` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_userinfo_groups`
--

DROP TABLE IF EXISTS `blog_userinfo_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_userinfo_groups` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `userinfo_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `blog_userinfo_groups_userinfo_id_group_id_5f60ecec_uniq` (`userinfo_id`,`group_id`),
  KEY `blog_userinfo_groups_group_id_1fb5e93a_fk_auth_group_id` (`group_id`),
  CONSTRAINT `blog_userinfo_groups_group_id_1fb5e93a_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `blog_userinfo_groups_userinfo_id_f6f0498b_fk_blog_userinfo_nid` FOREIGN KEY (`userinfo_id`) REFERENCES `blog_userinfo` (`nid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_userinfo_groups`
--

LOCK TABLES `blog_userinfo_groups` WRITE;
/*!40000 ALTER TABLE `blog_userinfo_groups` DISABLE KEYS */;
/*!40000 ALTER TABLE `blog_userinfo_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_userinfo_user_permissions`
--

DROP TABLE IF EXISTS `blog_userinfo_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_userinfo_user_permissions` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `userinfo_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `blog_userinfo_user_permi_userinfo_id_permission_i_7d343093_uniq` (`userinfo_id`,`permission_id`),
  KEY `blog_userinfo_user_p_permission_id_ace80f7e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `blog_userinfo_user_p_permission_id_ace80f7e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `blog_userinfo_user_p_userinfo_id_57e76697_fk_blog_user` FOREIGN KEY (`userinfo_id`) REFERENCES `blog_userinfo` (`nid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_userinfo_user_permissions`
--

LOCK TABLES `blog_userinfo_user_permissions` WRITE;
/*!40000 ALTER TABLE `blog_userinfo_user_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `blog_userinfo_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6_fk_blog_userinfo_nid` (`user_id`),
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_blog_userinfo_nid` FOREIGN KEY (`user_id`) REFERENCES `blog_userinfo` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2021-09-01 02:15:35.055174','1','番茄社区',1,'[{\"added\": {}}]',8,1),(2,'2021-09-01 02:15:59.681281','2','诸葛亮',1,'[{\"added\": {}}]',8,1),(3,'2021-09-01 02:17:08.887611','1','zhougongjin',2,'[{\"changed\": {\"fields\": [\"Email address\", \"Telephone\", \"Avatar\", \"Blog\"]}}]',6,1),(4,'2021-09-01 02:17:52.998012','2','zhugeliang',1,'[{\"added\": {}}]',6,1),(5,'2021-09-01 02:20:00.064995','1','python',1,'[{\"added\": {}}]',11,1),(6,'2021-09-01 02:20:53.384650','1','LeetCode入门指南 之 动态规划思想',1,'[{\"added\": {}}]',7,1),(7,'2021-09-01 02:22:03.212763','1','LeetCode入门指南 之 动态规划思想',2,'[]',7,1),(8,'2021-09-01 02:22:52.689242','2','vscode',1,'[{\"added\": {}}]',11,1),(9,'2021-09-01 02:22:55.046917','2','解锁 VS Code 更多可能性，轻松入门 WebView',1,'[{\"added\": {}}]',7,1),(10,'2021-09-01 02:23:52.481232','3','单片机',1,'[{\"added\": {}}]',11,1),(11,'2021-09-01 02:23:53.671315','3','单片机学习（九）定时器扫描按钮和数码管与PWM的使用',1,'[{\"added\": {}}]',7,1),(12,'2021-09-01 02:52:34.281384','2','解锁 VS Code 更多可能性，轻松入门 WebView',2,'[{\"changed\": {\"fields\": [\"Content\"]}}]',7,1),(13,'2021-09-01 05:44:20.084395','4','数据结构与算法——排序算法-归并排序',1,'[{\"added\": {}}]',7,1),(14,'2021-09-01 05:49:40.394152','1','数据',1,'[{\"added\": {}}]',9,1),(15,'2021-09-01 05:49:49.882554','2','结构',1,'[{\"added\": {}}]',9,1),(16,'2021-09-01 05:49:56.401877','3','单片机',1,'[{\"added\": {}}]',9,1),(17,'2021-09-01 05:50:05.968144','1','数据结构与算法——排序算法-归并排序---数据',1,'[{\"added\": {}}]',12,1),(18,'2021-09-01 05:50:12.834319','2','解锁 VS Code 更多可能性，轻松入门 WebView---结构',1,'[{\"added\": {}}]',12,1),(19,'2021-09-01 05:50:20.819759','3','单片机学习（九）定时器扫描按钮和数码管与PWM的使用---单片机',1,'[{\"added\": {}}]',12,1),(20,'2021-09-01 05:50:30.115735','4','数据结构与算法——排序算法-归并排序---结构',1,'[{\"added\": {}}]',12,1),(21,'2021-09-02 13:48:58.268940','4','数据结构与算法——排序算法-归并排序',2,'[{\"changed\": {\"fields\": [\"Content\"]}}]',7,1),(22,'2021-09-02 13:50:42.462258','3','单片机学习（九）定时器扫描按钮和数码管与PWM的使用',2,'[{\"changed\": {\"fields\": [\"Content\"]}}]',7,1),(23,'2021-09-02 13:52:11.207801','2','解锁 VS Code 更多可能性，轻松入门 WebView',2,'[{\"changed\": {\"fields\": [\"Content\"]}}]',7,1),(24,'2021-09-02 13:52:36.077058','1','LeetCode入门指南 之 动态规划思想',2,'[{\"changed\": {\"fields\": [\"Content\"]}}]',7,1);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (1,'admin','logentry'),(3,'auth','group'),(2,'auth','permission'),(7,'blog','article'),(12,'blog','article2tag'),(13,'blog','articleupdown'),(8,'blog','blog'),(11,'blog','category'),(10,'blog','comment'),(9,'blog','tag'),(6,'blog','userinfo'),(4,'contenttypes','contenttype'),(5,'sessions','session');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_migrations` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2021-08-28 02:30:22.139969'),(2,'contenttypes','0002_remove_content_type_name','2021-08-28 02:30:22.181006'),(3,'auth','0001_initial','2021-08-28 02:30:22.339682'),(4,'auth','0002_alter_permission_name_max_length','2021-08-28 02:30:22.375714'),(5,'auth','0003_alter_user_email_max_length','2021-08-28 02:30:22.379718'),(6,'auth','0004_alter_user_username_opts','2021-08-28 02:30:22.382721'),(7,'auth','0005_alter_user_last_login_null','2021-08-28 02:30:22.385723'),(8,'auth','0006_require_contenttypes_0002','2021-08-28 02:30:22.387725'),(9,'auth','0007_alter_validators_add_error_messages','2021-08-28 02:30:22.390728'),(10,'auth','0008_alter_user_username_max_length','2021-08-28 02:30:22.393731'),(11,'auth','0009_alter_user_last_name_max_length','2021-08-28 02:30:22.397734'),(12,'auth','0010_alter_group_name_max_length','2021-08-28 02:30:22.415751'),(13,'auth','0011_update_proxy_permissions','2021-08-28 02:30:22.418753'),(14,'auth','0012_alter_user_first_name_max_length','2021-08-28 02:30:22.422757'),(15,'blog','0001_initial','2021-08-28 02:30:22.978790'),(16,'admin','0001_initial','2021-08-28 02:30:23.027835'),(17,'admin','0002_logentry_remove_auto_add','2021-08-28 02:30:23.033840'),(18,'admin','0003_logentry_add_action_flag_choices','2021-08-28 02:30:23.040846'),(19,'sessions','0001_initial','2021-08-28 02:30:23.104429');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('k239ws0ft4yaoojv7mng56utu4velmzb','.eJxVjDsOgzAQBe_iOrLWBmMnXehzBrS7XmInCCQ-aaLcPUaioZ2Z977qw1MUdVO5ScNdXVSH25q6bZG5y7Fwc2aE_JZxF_GF43PSPI3rnEnviT7soh_ldGiP9nSQcEllzV6sq2pk24PYwIEQatuTSAPGmgoMBe-hvlpi57y4UopgMMETVQDq9wcz-Dxj:1mMR9h:s77my-3cDi1gYWDu_tEyO6bJz7j8oRA96WyxzEDZP0c','2021-09-18 16:36:05.040798');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-09-04 16:53:12
