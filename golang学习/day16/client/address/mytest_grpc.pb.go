// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.20.1
// source: mytest.proto

package address

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BirthYearServiceClient is the client API for BirthYearService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BirthYearServiceClient interface {
	BirthYear(ctx context.Context, in *StudentRequest, opts ...grpc.CallOption) (*StudentResponse, error)
}

type birthYearServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBirthYearServiceClient(cc grpc.ClientConnInterface) BirthYearServiceClient {
	return &birthYearServiceClient{cc}
}

func (c *birthYearServiceClient) BirthYear(ctx context.Context, in *StudentRequest, opts ...grpc.CallOption) (*StudentResponse, error) {
	out := new(StudentResponse)
	err := c.cc.Invoke(ctx, "/address.BirthYearService/BirthYear", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BirthYearServiceServer is the server API for BirthYearService service.
// All implementations must embed UnimplementedBirthYearServiceServer
// for forward compatibility
type BirthYearServiceServer interface {
	BirthYear(context.Context, *StudentRequest) (*StudentResponse, error)
	mustEmbedUnimplementedBirthYearServiceServer()
}

// UnimplementedBirthYearServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBirthYearServiceServer struct {
}

func (UnimplementedBirthYearServiceServer) BirthYear(context.Context, *StudentRequest) (*StudentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BirthYear not implemented")
}
func (UnimplementedBirthYearServiceServer) mustEmbedUnimplementedBirthYearServiceServer() {}

// UnsafeBirthYearServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BirthYearServiceServer will
// result in compilation errors.
type UnsafeBirthYearServiceServer interface {
	mustEmbedUnimplementedBirthYearServiceServer()
}

func RegisterBirthYearServiceServer(s grpc.ServiceRegistrar, srv BirthYearServiceServer) {
	s.RegisterService(&BirthYearService_ServiceDesc, srv)
}

func _BirthYearService_BirthYear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BirthYearServiceServer).BirthYear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/address.BirthYearService/BirthYear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BirthYearServiceServer).BirthYear(ctx, req.(*StudentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BirthYearService_ServiceDesc is the grpc.ServiceDesc for BirthYearService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BirthYearService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "address.BirthYearService",
	HandlerType: (*BirthYearServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BirthYear",
			Handler:    _BirthYearService_BirthYear_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mytest.proto",
}

// TwoAfterYearAgeServiceClient is the client API for TwoAfterYearAgeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TwoAfterYearAgeServiceClient interface {
	TwoAfterYearAge(ctx context.Context, in *StudentRequest, opts ...grpc.CallOption) (*StudentResponse, error)
}

type twoAfterYearAgeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTwoAfterYearAgeServiceClient(cc grpc.ClientConnInterface) TwoAfterYearAgeServiceClient {
	return &twoAfterYearAgeServiceClient{cc}
}

func (c *twoAfterYearAgeServiceClient) TwoAfterYearAge(ctx context.Context, in *StudentRequest, opts ...grpc.CallOption) (*StudentResponse, error) {
	out := new(StudentResponse)
	err := c.cc.Invoke(ctx, "/address.TwoAfterYearAgeService/TwoAfterYearAge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TwoAfterYearAgeServiceServer is the server API for TwoAfterYearAgeService service.
// All implementations must embed UnimplementedTwoAfterYearAgeServiceServer
// for forward compatibility
type TwoAfterYearAgeServiceServer interface {
	TwoAfterYearAge(context.Context, *StudentRequest) (*StudentResponse, error)
	mustEmbedUnimplementedTwoAfterYearAgeServiceServer()
}

// UnimplementedTwoAfterYearAgeServiceServer must be embedded to have forward compatible implementations.
type UnimplementedTwoAfterYearAgeServiceServer struct {
}

func (UnimplementedTwoAfterYearAgeServiceServer) TwoAfterYearAge(context.Context, *StudentRequest) (*StudentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TwoAfterYearAge not implemented")
}
func (UnimplementedTwoAfterYearAgeServiceServer) mustEmbedUnimplementedTwoAfterYearAgeServiceServer() {
}

// UnsafeTwoAfterYearAgeServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TwoAfterYearAgeServiceServer will
// result in compilation errors.
type UnsafeTwoAfterYearAgeServiceServer interface {
	mustEmbedUnimplementedTwoAfterYearAgeServiceServer()
}

func RegisterTwoAfterYearAgeServiceServer(s grpc.ServiceRegistrar, srv TwoAfterYearAgeServiceServer) {
	s.RegisterService(&TwoAfterYearAgeService_ServiceDesc, srv)
}

func _TwoAfterYearAgeService_TwoAfterYearAge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwoAfterYearAgeServiceServer).TwoAfterYearAge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/address.TwoAfterYearAgeService/TwoAfterYearAge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwoAfterYearAgeServiceServer).TwoAfterYearAge(ctx, req.(*StudentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// TwoAfterYearAgeService_ServiceDesc is the grpc.ServiceDesc for TwoAfterYearAgeService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TwoAfterYearAgeService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "address.TwoAfterYearAgeService",
	HandlerType: (*TwoAfterYearAgeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TwoAfterYearAge",
			Handler:    _TwoAfterYearAgeService_TwoAfterYearAge_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mytest.proto",
}
